{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\",\"filename\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Matthew\\documents\\github\\Damocles",
      "filename": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Matthew\\documents\\github\\Damocles",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src\\server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar gameStates = require(\"./gameStates.js\");\n\nvar courrier = require(\"./courrier.js\");\n\nvar _require = require('../cards'),\n    colors = _require.colors;\n\nvar _require2 = require('../cards'),\n    cards = _require2.cards;\n\nvar _require3 = require('pg'),\n    Client = _require3.Client;\n\nvar path = require('path'); //Postgres database connection\n\n/* const client = new Client({\r\n  connectionString: process.env.DATABASE_URL || \"postgres://matthew:cadenza@localhost:5432/tempdb\",\r\n});\r\nclient.connect(); */\n\n\nvar express = require('express'),\n    http = require('http');\n\nvar app = express();\nvar server = http.createServer(app);\n\nvar io = require('socket.io').listen(server); //Port server runs on\n\n\nvar port = process.env.PORT || 3000;\napp.use(\"/css\", express[\"static\"](path.resolve(__dirname + '/../css/')));\napp.use(\"/static\", express[\"static\"](path.resolve(__dirname + '/../static/')));\napp.use(\"/src\", express[\"static\"]('./src/'));\napp.use(\"/dist\", express[\"static\"](path.resolve(__dirname + '/../dist/'))); //Host the main page\n\napp.get('/', function (req, res) {\n  res.sendFile(path.resolve(__dirname + '/../index.html'));\n});\nvar MIN_PLAYERS = 2; //On initial connection\n\nio.on('connection', function (socket) {\n  console.log('a user connected');\n  socket.on('refreshCookie', function (data) {\n    socket.join('lobby');\n    socket.emit(courrier.cookify, {\n      cookie: setCookie(data),\n      gameState: gameStates.mainLobby,\n      availableGames: publicInstances\n    });\n  }); //Login via database if available\n\n  socket.on('login', function (data) {\n    var values = [data.username];\n    socket.join('lobby');\n    socket.emit(courrier.cookify, {\n      cookie: setCookie(values[0]),\n      gameState: gameStates.mainLobby,\n      availableGames: publicInstances\n    });\n  }); //Create a new game room\n\n  socket.on('roomcreated', function (data) {\n    var id = gameId;\n    var deck = shuffle(selectCards.slice());\n    var creator = data.creator;\n    var players = [];\n    var maxPlayers = data.players;\n    var played = [];\n    var points = [0];\n    var ready = 0;\n\n    if (data.name === \"p555test\") {\n      players.push({\n        name: 'B-9',\n        ready: true\n      });\n      played.push(deck.splice(0, 8));\n      points.push(0);\n      players.push({\n        name: 'The Iron Giant',\n        ready: true\n      });\n      played.push(deck.splice(0, 8));\n      points.push(0);\n      ready = 2;\n      maxPlayers = 3;\n    }\n\n    played.push([]);\n    players.push({\n      name: creator,\n      ready: false\n    });\n    var newInstance = {\n      creator: data.creator,\n      name: data.name,\n      maxPlayers: maxPlayers,\n      id: gameId,\n      deck: deck,\n      players: players,\n      ready: ready,\n      points: points,\n      gameState: gameStates.preGameLobby,\n      played: played,\n      numDiscarded: 0,\n      spaces: Array(7).fill(null),\n      colorCounts: colorNames.map(function (name) {\n        return {\n          color: name,\n          count: 4\n        };\n      }),\n      turn: 0,\n      chat: []\n    };\n    var newPublicInstance = {\n      creator: data.creator,\n      name: data.name,\n      maxPlayers: data.players,\n      currentPlayers: players.length,\n      id: gameId\n    };\n    gameInstances[id] = newInstance;\n    publicInstances.push(newPublicInstance);\n    io.to('lobby').emit(courrier.newRoom, {\n      availableGames: publicInstances\n    });\n    socket.leave('lobby');\n    socket.join('' + gameId);\n    socket.emit(courrier.userJoined, {\n      selectCards: deck.splice(0, 8),\n      gameState: newInstance.gameState,\n      players: newInstance.players,\n      chat: newInstance.chat,\n      played: newInstance.played,\n      id: newInstance.id,\n      pid: newInstance.players.length - 1,\n      points: newInstance.points\n    });\n    gameId += 1;\n  });\n  socket.on('roomjoined', function (data) {\n    var joinedInstance = gameInstances[data.id];\n    var user = data.user;\n    joinedInstance.players.push({\n      name: user,\n      ready: false\n    });\n    joinedInstance.points.push(0);\n    joinedInstance.played.push([]);\n    joinedInstance.pid++;\n    socket.leave('lobby');\n    socket.join('' + data.id);\n\n    if (joinedInstance.players.length === joinedInstance.maxPlayers) {\n      for (var i = 0; i < publicInstances.length; i++) {\n        if (publicInstances[i].id === data.id) {\n          publicInstances.splice(i, 1);\n          io.to('lobby').emit(courrier.newRoom, {\n            availableGames: publicInstances\n          });\n        }\n      }\n    }\n\n    gameInstances[data.id] = joinedInstance;\n    socket.emit(courrier.userJoined, {\n      selectCards: joinedInstance.deck.splice(0, 8),\n      gameState: joinedInstance.gameState,\n      id: joinedInstance.id,\n      pid: joinedInstance.players.length - 1\n    });\n    io.to('' + data.id).emit(\"userjoined\", {\n      players: joinedInstance.players,\n      chat: joinedInstance.chat,\n      played: joinedInstance.played,\n      points: joinedInstance.points\n    });\n  });\n  socket.on(\"sendChat\", function (data) {\n    var instance = gameInstances[data.id];\n    instance.chat.push({\n      user: data.user,\n      message: data.message\n    });\n    gameInstances[data.id] = instance;\n    io.to('' + data.id).emit(\"messageSent\", {\n      chat: instance.chat\n    });\n  });\n  socket.on('userreadied', function (data) {\n    var instance = gameInstances[data.id];\n    instance.ready += 1;\n\n    for (var i = 0; i < instance.players.length; i++) {\n      if (instance.players[i].name === data.user) {\n        instance.players[i].ready = true;\n        gameInstances[data.id] = instance;\n        io.to('' + data.id).emit(courrier.userReadied, {\n          players: instance.players\n        });\n        break;\n      }\n    }\n\n    if (instance.ready === instance.players.length && instance.ready >= MIN_PLAYERS) {\n      for (var _i = 0; _i < publicInstances.length; _i++) {\n        if (publicInstances[_i].id === data.id) {\n          publicInstances.splice(_i, 1);\n          io.to('lobby').emit(courrier.newRoom, {\n            availableGames: publicInstances\n          });\n        }\n      }\n\n      instance.gameState = gameStates.initialDiscard;\n      gameInstances[data.id] = instance;\n      io.to('' + data.id).emit('discardphase', {\n        spaces: instance.spaces,\n        colorCounts: instance.colorCounts,\n        gameState: instance.gameState,\n        played: instance.played,\n        processCode: null,\n        discardCount: 2,\n        points: instance.points\n      });\n    }\n  });\n  socket.on('discardPresetup', function (data) {\n    var instance = gameInstances[data.id];\n    instance.numDiscarded++;\n    socket.emit('cardUpdate', {\n      selectCards: data.newHand\n    });\n\n    if (instance.numDiscarded === instance.players.length) {\n      instance.currentPlayer = Math.floor(Math.random() * instance.players.length);\n      instance.gameState = \"setup\";\n      gameInstances[data.id] = instance;\n      io.to('' + data.id).emit('setupphase', {\n        gameState: instance.gameState,\n        currentPlayer: instance.currentPlayer\n      });\n    } else {\n      instance.gameState = \"standby\";\n      gameInstances[data.id] = instance;\n      socket.emit(\"standby\", {\n        gameState: instance.gameState\n      });\n    }\n  });\n  socket.on('nextPhase', function (data) {\n    var instance = gameInstances[data.id];\n\n    if (instance.gameState === gameStates.hasteCheck) {\n      instance.gameState = gameStates.swapBoard;\n    } else if (instance.gameState === 'playCards' || instance.gameState === gameStates.reflexed) {\n      instance.turn++;\n\n      if (instance.turn === instance.players.length * 8) {\n        instance.currentPlayer = null;\n        instance.gameState = \"gameover\";\n      } else {\n        instance.currentPlayer = (instance.currentPlayer + 1) % instance.players.length;\n        instance.gameState = gameStates.hasteCheck;\n      }\n    }\n\n    gameInstances[data.id] = instance;\n    io.to('' + data.id).emit(courrier.nextPlayer, {\n      gameState: instance.gameState,\n      currentPlayer: instance.currentPlayer\n    });\n  });\n  socket.on('boardChange', function (data) {\n    var instance = gameInstances[data.id];\n    instance.spaces = data.newSpaces;\n    instance.colorCounts = data.newCounts;\n\n    if (instance.gameState === \"setup\") {\n      instance.currentPlayer = (instance.currentPlayer + 1) % instance.players.length;\n\n      if (!instance.spaces.includes(null)) {\n        instance.gameState = gameStates.hasteCheck;\n      }\n    } else {\n      instance.gameState = \"playCards\";\n    }\n\n    gameInstances[data.id] = instance;\n    io.to('' + data.id).emit('boardChange', {\n      spaces: instance.spaces,\n      colorCounts: instance.colorCounts,\n      currentPlayer: instance.currentPlayer,\n      gameState: instance.gameState\n    });\n  });\n  socket.on('bonusswap', function (data) {\n    var instance = gameInstances[data.id];\n    instance.spaces = data.newSpaces;\n    instance.colorCounts = data.newCounts;\n    instance.gameState = gameStates.swapBoard;\n    gameInstances[data.id] = instance;\n    io.to('' + data.id).emit('boardChange', {\n      spaces: instance.spaces,\n      colorCounts: instance.colorCounts,\n      gameState: instance.gameState\n    });\n  });\n  socket.on('discardNormalHand', function (data) {\n    var instance = gameInstances[data.id];\n    instance.gameState = \"playCards\";\n    var tempCards = data.hand.slice();\n    socket.emit('boardChange', {\n      selectCards: tempCards\n    });\n    io.to('' + data.id).emit('boardChange', {\n      gameState: instance.gameState\n    });\n  });\n  socket.on('cardPlayed', function (data) {\n    var instance = gameInstances[data.id];\n    var newPlayed = instance.played[data.pid].slice();\n    var interacted = handleCardInteractions(data.newPlayed, data.oldPlayed, data.id);\n    instance.points[data.pid] += interacted.combust;\n    newPlayed = newPlayed.concat(interacted.played);\n    instance.played[data.pid] = newPlayed;\n    socket.emit('cardUpdate', {\n      selectCards: data.rest.concat(interacted.newCards)\n    });\n\n    if (interacted.processCode != null) {\n      instance.gameState = 'discardNormal';\n      socket.emit('discardphase', {\n        gameState: instance.gameState,\n        processCode: interacted.processCode,\n        discardCount: 2\n      });\n    }\n\n    if (interacted.stateEdit === \"H\") {\n      instance.gameState = gameStates.hasted;\n      socket.emit('bonusswap', {\n        gameState: instance.gameState\n      });\n    } else if (interacted.stateEdit === \"R\") {\n      instance.gameState = gameStates.reflexed;\n      socket.emit('reflexed', {\n        gameState: instance.gameState\n      });\n    } else {\n      if (instance.gameState === gameStates.reflexed && data.reflexused === true) {\n        instance.gameState = 'playCards';\n      }\n    }\n\n    gameInstances[data.id] = instance;\n    io.to('' + data.id).emit('cardPlayed', {\n      played: instance.played,\n      gameState: instance.gameState,\n      points: instance.points\n    });\n  });\n  socket.on(\"abandonRoom\", function (data) {\n    gameInstances[data.id] = [];\n\n    for (var i = 0; i < publicInstances.length; i++) {\n      if (publicInstances[i].id == data.id) {\n        publicInstances.splice(i, 1);\n        break;\n      }\n    }\n\n    var users = io.sockets.adapter.rooms['' + data.id].sockets;\n    Object.keys(users).forEach(function (client) {\n      var socket = io[\"in\"]('' + gameId).connected[client];\n      socket.leave('' + gameId);\n      socket.join('lobby');\n      socket.emit(courrier.returnToLobby, {\n        gameState: gameStates.mainLobby,\n        availableGames: publicInstances\n      });\n    });\n    io.to('lobby').emit(courrier.newRoom, {\n      availableGames: publicInstances\n    });\n  });\n});\nserver.listen(port, function () {\n  console.log('listening on *' + port);\n});\nvar colorNames = Object.values(colors);\nvar IDS = new Set();\nvar selectCards = cards.map(function (card) {\n  var intAdded = false;\n  var randInt = -1;\n  var spaces = Array(7).fill(null);\n  var points = 0;\n\n  if (card.one != null) {\n    spaces[0] = card.one;\n    points++;\n  }\n\n  if (card.two != null) {\n    spaces[1] = card.two;\n    points++;\n  }\n\n  if (card.three != null) {\n    spaces[2] = card.three;\n    points++;\n  }\n\n  if (card.four != null) {\n    spaces[3] = card.four;\n    points++;\n  }\n\n  if (card.five != null) {\n    spaces[4] = card.five;\n    points++;\n  }\n\n  if (card.six != null) {\n    spaces[5] = card.six;\n    points++;\n  }\n\n  if (card.seven != null) {\n    spaces[6] = card.seven;\n    points++;\n  }\n\n  while (!intAdded) {\n    randInt = Math.floor(Math.random() * 100000);\n\n    if (!IDS.has(randInt)) {\n      IDS.add(randInt);\n      intAdded = true;\n    }\n  }\n\n  card.ID = randInt;\n  card.spaces = spaces;\n  card.points = points;\n  return card;\n});\nvar gameId = 1;\nvar gameInstances = [];\nvar publicInstances = [];\n\nfunction shuffle(toShuffle) {\n  var arr = toShuffle.slice();\n\n  for (var i = arr.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n\n  return arr;\n}\n\nfunction setCookie(user) {\n  var d = new Date();\n  d.setTime(d.getTime() + 24 * 60 * 60 * 1000);\n  var expires = \"expires=\" + d.toUTCString();\n  return \"Damocles=\" + user + \"; \" + expires + \"; path=/\";\n}\n\nfunction handleCardInteractions(played, oldPlayed, id) {\n  var returnToPublic = [];\n  var returnMe = {\n    newCards: [],\n    processCode: null,\n    played: [],\n    combust: 0\n  };\n  var num = null;\n  var action = null;\n\n  for (var i = 0; i < played.length; i++) {\n    var current = played[i];\n\n    if (current.type === '1' || current.type === '2' || current.type === '3') {\n      num = parseInt(current.type);\n    } else {\n      action = current.type;\n    }\n\n    if (current.type != 'C') {\n      returnToPublic.push(current);\n    } else {\n      returnMe.combust += current.points;\n    }\n  }\n\n  for (var _i2 = 0; _i2 < oldPlayed.length; _i2++) {\n    var _current = oldPlayed[_i2];\n\n    if (_current.type === '1' || _current.type === '2' || _current.type === '3') {\n      num = parseInt(_current.type);\n    } else {\n      action = _current.type;\n    }\n  }\n\n  returnMe.played = returnToPublic.slice();\n\n  if (num != null) {\n    if (action === \"C\") {\n      Object.assign(returnMe, {\n        newCards: gameInstances[id].deck.splice(0, num + 1)\n      });\n    } else if (action === \"O\") {\n      Object.assign(returnMe, {\n        newCards: gameInstances[id].deck.splice(0, num + 2),\n        processCode: num + 2\n      });\n    } else if (action === \"G\") {\n      Object.assign(returnMe, {\n        newCards: gameInstances[id].deck.splice(0, num)\n      });\n    } else {\n      console.log(\"Something went wrong\");\n    }\n  } else {\n    if (action === \"A\") {\n      //use opponents revealed\n      Object.assign(returnMe, {\n        stateEdit: \"A\"\n      });\n    } else if (action === \"R\") {\n      //use relative position\n      Object.assign(returnMe, {\n        stateEdit: \"R\"\n      });\n    } else if (action === \"H\") {\n      //swap twice\n      Object.assign(returnMe, {\n        stateEdit: \"H\"\n      });\n    } else {\n      console.log(\"Something went wrong\");\n    }\n  }\n\n  return returnMe;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "gameStates",
        "require",
        "courrier",
        "colors",
        "cards",
        "Client",
        "path",
        "express",
        "http",
        "app",
        "server",
        "createServer",
        "io",
        "listen",
        "port",
        "process",
        "env",
        "PORT",
        "use",
        "resolve",
        "__dirname",
        "get",
        "req",
        "res",
        "sendFile",
        "MIN_PLAYERS",
        "on",
        "socket",
        "console",
        "log",
        "data",
        "join",
        "emit",
        "cookify",
        "cookie",
        "setCookie",
        "gameState",
        "mainLobby",
        "availableGames",
        "publicInstances",
        "values",
        "username",
        "id",
        "gameId",
        "deck",
        "shuffle",
        "selectCards",
        "slice",
        "creator",
        "players",
        "maxPlayers",
        "played",
        "points",
        "ready",
        "name",
        "push",
        "splice",
        "newInstance",
        "preGameLobby",
        "numDiscarded",
        "spaces",
        "Array",
        "fill",
        "colorCounts",
        "colorNames",
        "map",
        "color",
        "count",
        "turn",
        "chat",
        "newPublicInstance",
        "currentPlayers",
        "length",
        "gameInstances",
        "to",
        "newRoom",
        "leave",
        "userJoined",
        "pid",
        "joinedInstance",
        "user",
        "i",
        "instance",
        "message",
        "userReadied",
        "initialDiscard",
        "processCode",
        "discardCount",
        "newHand",
        "currentPlayer",
        "Math",
        "floor",
        "random",
        "hasteCheck",
        "swapBoard",
        "reflexed",
        "nextPlayer",
        "newSpaces",
        "newCounts",
        "includes",
        "tempCards",
        "hand",
        "newPlayed",
        "interacted",
        "handleCardInteractions",
        "oldPlayed",
        "combust",
        "concat",
        "rest",
        "newCards",
        "stateEdit",
        "hasted",
        "reflexused",
        "users",
        "sockets",
        "adapter",
        "rooms",
        "Object",
        "keys",
        "forEach",
        "client",
        "connected",
        "returnToLobby",
        "IDS",
        "Set",
        "card",
        "intAdded",
        "randInt",
        "one",
        "two",
        "three",
        "four",
        "five",
        "six",
        "seven",
        "has",
        "add",
        "ID",
        "toShuffle",
        "arr",
        "j",
        "temp",
        "d",
        "Date",
        "setTime",
        "getTime",
        "expires",
        "toUTCString",
        "returnToPublic",
        "returnMe",
        "num",
        "action",
        "current",
        "type",
        "parseInt",
        "assign"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src",
      "sourcesContent": [
        "const gameStates = require(\"./gameStates.js\");\r\nconst courrier = require(\"./courrier.js\");\r\nvar {colors} = require('../cards');\r\nvar {cards} = require('../cards');\r\nconst { Client } = require('pg');\r\nvar path = require('path');\r\n\r\n//Postgres database connection\r\n/* const client = new Client({\r\n  connectionString: process.env.DATABASE_URL || \"postgres://matthew:cadenza@localhost:5432/tempdb\",\r\n});\r\nclient.connect(); */\r\nvar express = require('express'),\r\n    http = require('http');\r\nvar app = express();\r\nvar server = http.createServer(app);\r\nvar io = require('socket.io').listen(server);\r\n\r\n//Port server runs on\r\nvar port = process.env.PORT || 3000;\r\n\r\napp.use(\"/css\", express.static(path.resolve(__dirname + '/../css/')));\r\napp.use(\"/static\", express.static(path.resolve(__dirname + '/../static/')));\r\napp.use(\"/src\", express.static('./src/'));\r\napp.use(\"/dist\", express.static(path.resolve(__dirname + '/../dist/')));\r\n//Host the main page\r\napp.get('/', function(req, res){\r\n  res.sendFile(path.resolve(__dirname + ('/../index.html')));\r\n});\r\n\r\nconst MIN_PLAYERS = 2;\r\n//On initial connection\r\nio.on('connection', function(socket) {\r\n    console.log('a user connected');\r\n    socket.on('refreshCookie', function(data) {\r\n        socket.join('lobby');\r\n        socket.emit(courrier.cookify, { \r\n            cookie: setCookie(data),\r\n            gameState: gameStates.mainLobby,\r\n            availableGames: publicInstances\r\n        });\r\n    });\r\n    //Login via database if available\r\n    socket.on('login', function(data) {\r\n\r\n        const values = [data.username];\r\n        socket.join('lobby');\r\n        socket.emit(courrier.cookify, {\r\n            cookie: setCookie(values[0]),\r\n            gameState: gameStates.mainLobby,\r\n            availableGames: publicInstances\r\n        });\r\n    });\r\n    //Create a new game room\r\n    socket.on('roomcreated', function(data) {\r\n        let id = gameId;\r\n        let deck = shuffle(selectCards.slice());\r\n        let creator = data.creator;\r\n        let players = [];\r\n        let maxPlayers = data.players;\r\n        let played = [];\r\n        let points = [0];\r\n        let ready = 0;\r\n        if (data.name === \"p555test\") {\r\n            players.push({ name: 'B-9', ready: true});\r\n            played.push(deck.splice(0, 8));\r\n            points.push(0);\r\n            players.push({ name: 'The Iron Giant', ready: true});\r\n            played.push(deck.splice(0, 8));\r\n            points.push(0);\r\n            ready = 2;\r\n            maxPlayers = 3;\r\n        }\r\n        played.push([]);\r\n        players.push({ name: creator, ready: false });\r\n        let newInstance = {\r\n            creator: data.creator,\r\n            name: data.name,\r\n            maxPlayers: maxPlayers,\r\n            id: gameId,\r\n            deck: deck,\r\n            players: players,\r\n            ready: ready,\r\n            points: points,\r\n            gameState: gameStates.preGameLobby,\r\n            played: played,\r\n            numDiscarded: 0,\r\n            spaces: Array(7).fill(null),\r\n            colorCounts: colorNames.map(name => ({ color: name, count: 4 })),\r\n            turn: 0,\r\n            chat: []\r\n        };\r\n        let newPublicInstance = {\r\n            creator: data.creator,\r\n            name: data.name,\r\n            maxPlayers: data.players,\r\n            currentPlayers: players.length,\r\n            id: gameId\r\n        };\r\n        gameInstances[id] = newInstance;\r\n        publicInstances.push(newPublicInstance);\r\n        io.to('lobby').emit(courrier.newRoom, {\r\n            availableGames: publicInstances\r\n        });\r\n        socket.leave('lobby');\r\n        socket.join('' + gameId);\r\n        socket.emit(courrier.userJoined, {\r\n            selectCards: deck.splice(0, 8),\r\n            gameState: newInstance.gameState,\r\n            players: newInstance.players,\r\n            chat: newInstance.chat,\r\n            played: newInstance.played,\r\n            id: newInstance.id,\r\n            pid: newInstance.players.length - 1,\r\n            points: newInstance.points,\r\n        });\r\n        gameId += 1;\r\n    });\r\n    socket.on('roomjoined', function(data) {\r\n        let joinedInstance = gameInstances[data.id];\r\n        let user = data.user;\r\n        joinedInstance.players.push({ name: user, ready: false});\r\n        joinedInstance.points.push(0);\r\n        joinedInstance.played.push([]);\r\n        joinedInstance.pid++;\r\n        socket.leave('lobby');\r\n        socket.join('' + data.id);\r\n        if (joinedInstance.players.length === joinedInstance.maxPlayers) {\r\n            for (let i = 0; i < publicInstances.length; i++) {\r\n                if (publicInstances[i].id === data.id) {\r\n                    publicInstances.splice(i, 1);\r\n                    io.to('lobby').emit(courrier.newRoom, {\r\n                        availableGames: publicInstances\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        gameInstances[data.id] = joinedInstance;\r\n        socket.emit(courrier.userJoined, {\r\n            selectCards: joinedInstance.deck.splice(0,8),\r\n            gameState: joinedInstance.gameState,\r\n            id: joinedInstance.id,\r\n            pid: joinedInstance.players.length - 1,\r\n        });\r\n        io.to('' + data.id).emit(\"userjoined\", {\r\n            players: joinedInstance.players,\r\n            chat: joinedInstance.chat,\r\n            played: joinedInstance.played,\r\n            points: joinedInstance.points\r\n        });\r\n\r\n    });\r\n    socket.on(\"sendChat\", function(data) {\r\n        let instance = gameInstances[data.id];\r\n        instance.chat.push({user: data.user, message: data.message});\r\n        gameInstances[data.id] = instance;\r\n        io.to('' + data.id).emit(\"messageSent\", {\r\n            chat: instance.chat\r\n        });\r\n    });\r\n    socket.on('userreadied', function(data) {\r\n        let instance = gameInstances[data.id];\r\n        instance.ready += 1;\r\n        for (let i = 0; i < instance.players.length; i++) {\r\n            if (instance.players[i].name === data.user) {\r\n                instance.players[i].ready = true;\r\n                gameInstances[data.id] = instance;\r\n                io.to('' + data.id).emit(courrier.userReadied, {\r\n                    players: instance.players\r\n                });\r\n                break;\r\n            }\r\n        }\r\n        if (instance.ready === instance.players.length && instance.ready >= MIN_PLAYERS) {\r\n            for (let i = 0; i < publicInstances.length; i++) {\r\n                if (publicInstances[i].id === data.id) {\r\n                    publicInstances.splice(i, 1);\r\n                    io.to('lobby').emit(courrier.newRoom, {\r\n                        availableGames: publicInstances\r\n                    })\r\n                }\r\n            }\r\n            instance.gameState = gameStates.initialDiscard;\r\n            gameInstances[data.id] = instance;\r\n            io.to('' + data.id).emit('discardphase', {\r\n                spaces: instance.spaces,\r\n                colorCounts: instance.colorCounts,\r\n                gameState: instance.gameState,\r\n                played: instance.played,\r\n                processCode: null,\r\n                discardCount: 2,\r\n                points: instance.points\r\n            });\r\n        }\r\n    });\r\n    socket.on('discardPresetup', function(data) {\r\n        let instance = gameInstances[data.id];\r\n        instance.numDiscarded++;\r\n        socket.emit('cardUpdate', {\r\n            selectCards: data.newHand\r\n        });\r\n        if (instance.numDiscarded === instance.players.length) {\r\n            instance.currentPlayer = Math.floor(Math.random() * instance.players.length);\r\n            instance.gameState = \"setup\";\r\n            gameInstances[data.id] = instance;\r\n            io.to('' + data.id).emit('setupphase', {\r\n                gameState: instance.gameState,\r\n                currentPlayer: instance.currentPlayer,\r\n            });\r\n        } else {\r\n            instance.gameState = \"standby\";\r\n            gameInstances[data.id] = instance;\r\n            socket.emit(\"standby\", {\r\n                gameState: instance.gameState\r\n            });\r\n        }\r\n    });\r\n    socket.on('nextPhase', function(data) {\r\n        let instance = gameInstances[data.id];\r\n        if (instance.gameState === gameStates.hasteCheck) {\r\n            instance.gameState = gameStates.swapBoard;\r\n        } else if (instance.gameState === 'playCards' || instance.gameState === gameStates.reflexed) {\r\n            instance.turn++;\r\n            if (instance.turn === instance.players.length * 8) {\r\n                instance.currentPlayer = null;\r\n                instance.gameState = \"gameover\";\r\n            } else {\r\n                instance.currentPlayer = ((instance.currentPlayer + 1) % instance.players.length);\r\n                instance.gameState = gameStates.hasteCheck;\r\n            }\r\n        }\r\n        gameInstances[data.id] = instance;\r\n        io.to('' + data.id).emit(courrier.nextPlayer, {\r\n            gameState: instance.gameState,\r\n            currentPlayer: instance.currentPlayer\r\n        });\r\n    });\r\n    socket.on('boardChange', function(data) {\r\n        let instance = gameInstances[data.id];\r\n        instance.spaces = data.newSpaces;\r\n        instance.colorCounts = data.newCounts;\r\n        if (instance.gameState === \"setup\") {\r\n            instance.currentPlayer = ((instance.currentPlayer + 1) % instance.players.length);\r\n            if (!instance.spaces.includes(null)) {\r\n                instance.gameState = gameStates.hasteCheck;\r\n            }\r\n        } else {\r\n            instance.gameState = \"playCards\";\r\n        }\r\n        gameInstances[data.id] = instance;\r\n        io.to('' + data.id).emit('boardChange', {  \r\n            spaces: instance.spaces,\r\n            colorCounts: instance.colorCounts,\r\n            currentPlayer: instance.currentPlayer,\r\n            gameState: instance.gameState,\r\n        });\r\n    });\r\n    socket.on('bonusswap', function(data) {\r\n        let instance = gameInstances[data.id];\r\n        instance.spaces = data.newSpaces;\r\n        instance.colorCounts = data.newCounts;\r\n        instance.gameState = gameStates.swapBoard;\r\n        gameInstances[data.id] = instance;\r\n        io.to('' + data.id).emit('boardChange', {  \r\n            spaces: instance.spaces,\r\n            colorCounts: instance.colorCounts,\r\n            gameState: instance.gameState,\r\n        });\r\n    });\r\n    socket.on('discardNormalHand', function(data) {\r\n        let instance = gameInstances[data.id];\r\n        instance.gameState = \"playCards\";\r\n        let tempCards = data.hand.slice();\r\n        socket.emit('boardChange', {\r\n            selectCards: tempCards\r\n        });\r\n        io.to('' + data.id).emit('boardChange', {\r\n            gameState: instance.gameState,\r\n\r\n        });\r\n    });\r\n    socket.on('cardPlayed', function(data) {\r\n        let instance = gameInstances[data.id];\r\n        let newPlayed = instance.played[data.pid].slice();\r\n        let interacted = handleCardInteractions(data.newPlayed, data.oldPlayed, data.id);\r\n        instance.points[data.pid] += interacted.combust;\r\n        newPlayed = newPlayed.concat(interacted.played);\r\n        instance.played[data.pid] = newPlayed;\r\n        socket.emit('cardUpdate', {\r\n            selectCards: data.rest.concat(interacted.newCards)\r\n        });\r\n        if (interacted.processCode != null) {\r\n            instance.gameState = 'discardNormal';\r\n            socket.emit('discardphase', {\r\n                gameState: instance.gameState,\r\n                processCode: interacted.processCode,\r\n                discardCount: 2\r\n            })\r\n        }\r\n        if (interacted.stateEdit === \"H\") {\r\n            instance.gameState = gameStates.hasted;\r\n            socket.emit('bonusswap', {\r\n                gameState: instance.gameState\r\n            });\r\n        } else if (interacted.stateEdit === \"R\") {\r\n            instance.gameState = gameStates.reflexed;\r\n            socket.emit('reflexed', {\r\n                gameState: instance.gameState\r\n            });\r\n        } else {\r\n            if (instance.gameState === gameStates.reflexed && data.reflexused === true) {\r\n                instance.gameState = 'playCards';\r\n            }\r\n        }\r\n        gameInstances[data.id] = instance;\r\n        io.to('' + data.id).emit('cardPlayed', {\r\n            played: instance.played,\r\n            gameState: instance.gameState,\r\n            points: instance.points\r\n        });\r\n    });\r\n    socket.on(\"abandonRoom\", function(data) {\r\n        gameInstances[data.id] = [];\r\n        for(let i = 0; i < publicInstances.length; i++) {\r\n            if (publicInstances[i].id == data.id) {\r\n                publicInstances.splice(i ,1);\r\n                break;\r\n            }\r\n        }\r\n        var users = io.sockets.adapter.rooms['' + data.id].sockets;\r\n        Object.keys(users).forEach(function(client) {\r\n            let socket = io.in('' + gameId).connected[client];\r\n            socket.leave('' + gameId);\r\n            socket.join('lobby');\r\n            socket.emit(courrier.returnToLobby, {\r\n                gameState: gameStates.mainLobby,\r\n                availableGames: publicInstances\r\n            });\r\n        });\r\n        io.to('lobby').emit(courrier.newRoom, {\r\n            availableGames: publicInstances\r\n        });\r\n    });\r\n});\r\n\r\nserver.listen(port, function() {\r\n    console.log('listening on *' + port);\r\n});\r\n\r\nconst colorNames = Object.values(colors);\r\nvar IDS = new Set();\r\n\r\nvar selectCards = cards.map(card => {\r\n    let intAdded = false;\r\n    let randInt = -1;\r\n    let spaces = Array(7).fill(null);\r\n    let points = 0;\r\n    if (card.one != null) { spaces[0] = card.one; points++; }\r\n    if (card.two != null) { spaces[1] = card.two; points++; }\r\n    if (card.three != null) { spaces[2] = card.three; points++; }\r\n    if (card.four != null) { spaces[3] = card.four; points++; }\r\n    if (card.five != null) { spaces[4] = card.five; points++; }\r\n    if (card.six != null) { spaces[5] = card.six; points++; }\r\n    if (card.seven != null) { spaces[6] = card.seven; points++; }\r\n    while (!intAdded) {\r\n        randInt = Math.floor(Math.random() * 100000);\r\n        if (!IDS.has(randInt)) {\r\n            IDS.add(randInt);\r\n            intAdded = true;\r\n        }\r\n    }\r\n    card.ID = randInt;\r\n    card.spaces = spaces;\r\n    card.points = points;\r\n    return card;\r\n});\r\n\r\nvar gameId = 1;\r\nvar gameInstances = [];\r\nvar publicInstances = [];\r\n\r\nfunction shuffle(toShuffle) {\r\n    let arr = toShuffle.slice();\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        let temp = arr[i];\r\n        arr[i] = arr[j];\r\n        arr[j] = temp;\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction setCookie(user) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + 24 * 60 * 60 * 1000);\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    return (\"Damocles=\" + user + \"; \" + expires + \"; path=/\");\r\n}\r\n\r\nfunction handleCardInteractions(played, oldPlayed, id) {\r\n    let returnToPublic = [];\r\n    let returnMe = {\r\n        newCards: [],\r\n        processCode: null,\r\n        played: [],\r\n        combust: 0\r\n    }\r\n    let num = null;\r\n    let action = null;\r\n    for (let i = 0; i < played.length; i++) {\r\n        let current = played[i];\r\n        if (current.type === '1' || current.type === '2' || current.type === '3') {\r\n            num = parseInt(current.type);\r\n        }\r\n        else {\r\n            action = current.type;\r\n        }\r\n        if (current.type != 'C') {\r\n            returnToPublic.push(current);\r\n        } else {\r\n            returnMe.combust += current.points;\r\n        }\r\n    }\r\n    for (let i = 0; i < oldPlayed.length; i++) {\r\n        let current = oldPlayed[i];\r\n        if (current.type === '1' || current.type === '2' || current.type === '3') {\r\n            num = parseInt(current.type);\r\n        }\r\n        else {\r\n            action = current.type;\r\n        }\r\n    }\r\n    returnMe.played = returnToPublic.slice();\r\n    if (num != null) {\r\n        if (action === \"C\") {\r\n            Object.assign(returnMe, {\r\n                newCards: gameInstances[id].deck.splice(0, num + 1)\r\n            });\r\n        } else if (action === \"O\") {\r\n            Object.assign(returnMe, {\r\n                newCards: gameInstances[id].deck.splice(0, num + 2),\r\n                processCode: num + 2\r\n            });\r\n        } else if (action === \"G\" ) {\r\n            Object.assign(returnMe, {\r\n                newCards: gameInstances[id].deck.splice(0, num)\r\n            });\r\n        } else {\r\n            console.log(\"Something went wrong\");\r\n        }\r\n    } else {\r\n        if (action === \"A\") { //use opponents revealed\r\n            Object.assign(returnMe, {\r\n                stateEdit: \"A\"\r\n            })\r\n        } else if (action === \"R\") { //use relative position\r\n            Object.assign(returnMe, {\r\n                stateEdit: \"R\"\r\n            })\r\n        } else if (action === \"H\") { //swap twice\r\n            Object.assign(returnMe, {\r\n                stateEdit: \"H\"\r\n            });\r\n        } else {\r\n            console.log(\"Something went wrong\");\r\n        }\r\n    }\r\n    return returnMe;\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1558646096155
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\",\"filename\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\\\\src\\\\gameStates.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Matthew\\documents\\github\\Damocles",
      "filename": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src\\gameStates.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Matthew\\documents\\github\\Damocles",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src\\gameStates.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src\\gameStates.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src",
        "sourceFileName": "gameStates.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  mainLobby: \"Main Lobby\",\n  preGameLobby: \"Pre-Game Lobby\",\n  initialDiscard: \"Initial Discard\",\n  hasteCheck: \"Haste Check\",\n  swapBoard: \"Swap Board\",\n  hasted: \"Hasted\",\n  reflexed: \"Reflexed\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbWVTdGF0ZXMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm1haW5Mb2JieSIsInByZUdhbWVMb2JieSIsImluaXRpYWxEaXNjYXJkIiwiaGFzdGVDaGVjayIsInN3YXBCb2FyZCIsImhhc3RlZCIsInJlZmxleGVkIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsU0FBUyxFQUFPLFlBREg7QUFFYkMsRUFBQUEsWUFBWSxFQUFJLGdCQUZIO0FBR2JDLEVBQUFBLGNBQWMsRUFBRSxpQkFISDtBQUliQyxFQUFBQSxVQUFVLEVBQU0sYUFKSDtBQUtiQyxFQUFBQSxTQUFTLEVBQU8sWUFMSDtBQU1iQyxFQUFBQSxNQUFNLEVBQVUsUUFOSDtBQU9iQyxFQUFBQSxRQUFRLEVBQVE7QUFQSCxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXE1hdHRoZXdcXGRvY3VtZW50c1xcZ2l0aHViXFxEYW1vY2xlc1xcc3JjIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBtYWluTG9iYnk6ICAgICAgXCJNYWluIExvYmJ5XCIsXHJcbiAgICBwcmVHYW1lTG9iYnk6ICAgXCJQcmUtR2FtZSBMb2JieVwiLFxyXG4gICAgaW5pdGlhbERpc2NhcmQ6IFwiSW5pdGlhbCBEaXNjYXJkXCIsXHJcbiAgICBoYXN0ZUNoZWNrOiAgICAgXCJIYXN0ZSBDaGVja1wiLFxyXG4gICAgc3dhcEJvYXJkOiAgICAgIFwiU3dhcCBCb2FyZFwiLFxyXG4gICAgaGFzdGVkOiAgICAgICAgIFwiSGFzdGVkXCIsXHJcbiAgICByZWZsZXhlZDogICAgICAgXCJSZWZsZXhlZFwiLFxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "gameStates.js"
      ],
      "names": [
        "module",
        "exports",
        "mainLobby",
        "preGameLobby",
        "initialDiscard",
        "hasteCheck",
        "swapBoard",
        "hasted",
        "reflexed"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,SAAS,EAAO,YADH;AAEbC,EAAAA,YAAY,EAAI,gBAFH;AAGbC,EAAAA,cAAc,EAAE,iBAHH;AAIbC,EAAAA,UAAU,EAAM,aAJH;AAKbC,EAAAA,SAAS,EAAO,YALH;AAMbC,EAAAA,MAAM,EAAU,QANH;AAObC,EAAAA,QAAQ,EAAQ;AAPH,CAAjB",
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src",
      "sourcesContent": [
        "module.exports = {\r\n    mainLobby:      \"Main Lobby\",\r\n    preGameLobby:   \"Pre-Game Lobby\",\r\n    initialDiscard: \"Initial Discard\",\r\n    hasteCheck:     \"Haste Check\",\r\n    swapBoard:      \"Swap Board\",\r\n    hasted:         \"Hasted\",\r\n    reflexed:       \"Reflexed\",\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558646020260
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\",\"filename\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\\\\cards.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\Damocles",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Matthew\\documents\\github\\Damocles",
      "filename": "C:\\Users\\Matthew\\documents\\github\\Damocles\\cards.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Matthew\\documents\\github\\Damocles",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Matthew\\documents\\github\\Damocles\\cards.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Matthew\\documents\\github\\Damocles\\cards.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\Damocles",
        "sourceFileName": "cards.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar COLORS = {\n  RED: \"red\",\n  BLUE: \"blue\",\n  GREEN: \"green\",\n  BLACK: \"black\",\n  GOLD: \"gold\"\n};\nvar gold = COLORS.GOLD;\nvar generate = \"G\";\nvar blue = COLORS.BLUE;\nvar red = COLORS.RED;\nvar green = COLORS.GREEN;\nvar gold = COLORS.GOLD;\nvar black = COLORS.BLACK;\nvar combust = \"C\";\nvar oracle = \"O\";\nvar reflex = \"R\";\nvar conquer = \"A\";\nvar haste = \"H\";\nvar one = \"1\";\nvar two = \"2\";\nvar three = \"3\";\nvar CARDS = [{\n  type: generate,\n  one: gold,\n  four: blue,\n  five: blue\n}, {\n  type: generate,\n  one: gold,\n  four: green,\n  five: green\n}, {\n  type: generate,\n  one: blue,\n  four: black,\n  five: black\n}, {\n  type: generate,\n  one: blue,\n  four: gold,\n  five: gold\n}, {\n  type: generate,\n  one: green,\n  four: black,\n  five: black\n}, {\n  type: generate,\n  one: green,\n  four: blue,\n  five: blue\n}, {\n  type: generate,\n  one: red,\n  four: green,\n  five: green\n}, {\n  type: generate,\n  one: red,\n  four: gold,\n  five: gold\n}, {\n  type: generate,\n  one: black,\n  four: red,\n  five: red\n}, {\n  type: generate,\n  one: black,\n  four: gold,\n  five: gold\n}, {\n  type: combust,\n  one: red,\n  three: blue,\n  six: blue\n}, {\n  type: combust,\n  one: red,\n  three: black,\n  six: black\n}, {\n  type: combust,\n  one: blue,\n  three: green,\n  six: green\n}, {\n  type: combust,\n  one: blue,\n  three: gold,\n  six: gold\n}, {\n  type: combust,\n  one: green,\n  three: red,\n  six: red\n}, {\n  type: combust,\n  one: green,\n  three: gold,\n  six: gold\n}, {\n  type: combust,\n  one: black,\n  three: blue,\n  six: blue\n}, {\n  type: combust,\n  one: black,\n  three: green,\n  six: green\n}, {\n  type: combust,\n  one: gold,\n  three: black,\n  six: black\n}, {\n  type: combust,\n  one: gold,\n  three: red,\n  six: red\n}, {\n  type: oracle,\n  one: red,\n  two: black,\n  seven: green\n}, {\n  type: oracle,\n  one: blue,\n  three: green,\n  seven: red\n}, {\n  type: oracle,\n  one: gold,\n  two: black,\n  six: blue\n}, {\n  type: oracle,\n  one: black,\n  four: red,\n  five: gold\n}, {\n  type: oracle,\n  one: green,\n  three: gold,\n  six: blue\n}, {\n  type: reflex,\n  one: green,\n  three: green\n}, {\n  type: reflex,\n  one: red,\n  three: red\n}, {\n  type: reflex,\n  one: blue,\n  three: blue\n}, {\n  type: reflex,\n  one: black,\n  three: black\n}, {\n  type: reflex,\n  one: gold,\n  three: gold\n},\n/* {\r\n    type: conquer,\r\n    one: green,\r\n    two: blue\r\n},\r\n{\r\n    type: conquer,\r\n    one: blue,\r\n    two: black\r\n},\r\n{\r\n    type: conquer,\r\n    one: black,\r\n    two: red\r\n},\r\n{\r\n    type: conquer,\r\n    one: red,\r\n    two: gold\r\n},\r\n{\r\n    type: conquer,\r\n    one: gold,\r\n    two: green\r\n}, */\n{\n  type: haste,\n  one: gold\n}, {\n  type: haste,\n  one: blue\n}, {\n  type: haste,\n  one: green\n}, {\n  type: haste,\n  one: red\n}, {\n  type: haste,\n  one: black\n}, {\n  type: one,\n  one: red,\n  two: red\n}, {\n  type: one,\n  one: gold,\n  two: gold\n}, {\n  type: one,\n  one: blue,\n  two: blue\n}, {\n  type: one,\n  one: green,\n  two: green\n}, {\n  type: one,\n  one: black,\n  two: black\n}, {\n  type: one,\n  one: red,\n  four: red\n}, {\n  type: one,\n  one: gold,\n  four: gold\n}, {\n  type: one,\n  one: green,\n  four: green\n}, {\n  type: one,\n  one: blue,\n  four: blue\n}, {\n  type: one,\n  one: black,\n  four: black\n}, {\n  type: two,\n  one: blue,\n  three: blue,\n  seven: red\n}, {\n  type: two,\n  one: black,\n  three: black,\n  seven: green\n}, {\n  type: two,\n  one: gold,\n  three: gold,\n  seven: black\n}, {\n  type: two,\n  one: red,\n  three: red,\n  seven: gold\n}, {\n  type: two,\n  one: green,\n  three: green,\n  seven: blue\n}, {\n  type: three,\n  two: gold,\n  three: black,\n  six: blue,\n  seven: red\n}, {\n  type: three,\n  two: blue,\n  three: red,\n  six: black,\n  seven: green\n}, {\n  type: three,\n  two: red,\n  three: gold,\n  six: green,\n  seven: blue\n}, {\n  type: three,\n  two: green,\n  three: blue,\n  six: gold,\n  seven: black\n}, {\n  type: three,\n  two: blue,\n  three: green,\n  six: red,\n  seven: gold\n}];\nmodule.exports = {\n  colors: COLORS,\n  cards: CARDS\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "cards.js"
      ],
      "names": [
        "COLORS",
        "RED",
        "BLUE",
        "GREEN",
        "BLACK",
        "GOLD",
        "gold",
        "generate",
        "blue",
        "red",
        "green",
        "black",
        "combust",
        "oracle",
        "reflex",
        "conquer",
        "haste",
        "one",
        "two",
        "three",
        "CARDS",
        "type",
        "four",
        "five",
        "six",
        "seven",
        "module",
        "exports",
        "colors",
        "cards"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\Damocles",
      "sourcesContent": [
        "const COLORS = {\r\n    RED: \"red\",\r\n    BLUE: \"blue\",\r\n    GREEN: \"green\",\r\n    BLACK: \"black\",\r\n    GOLD: \"gold\"\r\n};\r\n\r\nvar gold = COLORS.GOLD;\r\nvar generate = \"G\";\r\nvar blue = COLORS.BLUE;\r\nvar red = COLORS.RED;\r\nvar green = COLORS.GREEN;\r\nvar gold = COLORS.GOLD;\r\nvar black = COLORS.BLACK;\r\nvar combust = \"C\";\r\nvar oracle = \"O\";\r\nvar reflex = \"R\";\r\nvar conquer = \"A\";\r\nvar haste = \"H\";\r\nvar one = \"1\";\r\nvar two = \"2\";\r\nvar three = \"3\";\r\n\r\nconst CARDS = [\r\n    {\r\n        type: generate,\r\n        one: gold,\r\n        four: blue,\r\n        five: blue\r\n    },\r\n    {\r\n        type: generate,\r\n        one: gold,\r\n        four: green,\r\n        five: green\r\n    },\r\n    {\r\n        type: generate,\r\n        one: blue,\r\n        four: black,\r\n        five: black\r\n    },\r\n    {\r\n        type: generate,\r\n        one: blue,\r\n        four: gold,\r\n        five: gold\r\n    },\r\n    {\r\n        type: generate,\r\n        one: green,\r\n        four: black,\r\n        five: black\r\n    },\r\n    {\r\n        type: generate,\r\n        one: green,\r\n        four: blue,\r\n        five: blue\r\n    },\r\n    {\r\n        type: generate,\r\n        one: red,\r\n        four: green,\r\n        five: green\r\n    },\r\n    {\r\n        type: generate,\r\n        one: red,\r\n        four: gold,\r\n        five: gold\r\n    },\r\n    {\r\n        type: generate,\r\n        one: black,\r\n        four: red,\r\n        five: red\r\n    },\r\n    {\r\n        type: generate,\r\n        one: black,\r\n        four: gold,\r\n        five: gold\r\n    },\r\n    {\r\n        type: combust,\r\n        one: red,\r\n        three: blue,\r\n        six: blue\r\n    },\r\n    {\r\n        type: combust,\r\n        one: red,\r\n        three: black,\r\n        six: black\r\n    },\r\n    {\r\n        type: combust,\r\n        one: blue,\r\n        three: green,\r\n        six: green\r\n    },\r\n    {\r\n        type: combust,\r\n        one: blue,\r\n        three: gold,\r\n        six: gold\r\n    },\r\n    {\r\n        type: combust,\r\n        one: green,\r\n        three: red,\r\n        six: red\r\n    },\r\n    {\r\n        type: combust,\r\n        one: green,\r\n        three: gold,\r\n        six: gold\r\n    },\r\n    {\r\n        type: combust,\r\n        one: black,\r\n        three: blue,\r\n        six: blue\r\n    },\r\n    {\r\n        type: combust,\r\n        one: black,\r\n        three: green,\r\n        six: green\r\n    },\r\n    {\r\n        type: combust,\r\n        one: gold,\r\n        three: black,\r\n        six: black\r\n    },\r\n    {\r\n        type: combust,\r\n        one: gold,\r\n        three: red,\r\n        six: red\r\n    },\r\n    {\r\n        type: oracle,\r\n        one: red,\r\n        two: black,\r\n        seven: green\r\n    },\r\n    {\r\n        type: oracle,\r\n        one: blue,\r\n        three: green,\r\n        seven: red\r\n    },\r\n    {\r\n        type: oracle,\r\n        one: gold,\r\n        two: black,\r\n        six: blue\r\n    },\r\n    {\r\n        type: oracle,\r\n        one: black,\r\n        four: red,\r\n        five: gold\r\n    },\r\n    {\r\n        type: oracle,\r\n        one: green,\r\n        three: gold,\r\n        six: blue\r\n    },\r\n    {\r\n        type: reflex,\r\n        one: green,\r\n        three: green\r\n    },\r\n    {\r\n        type: reflex,\r\n        one: red,\r\n        three: red\r\n    },\r\n    {\r\n        type: reflex,\r\n        one: blue,\r\n        three: blue\r\n    },\r\n    {\r\n        type: reflex,\r\n        one: black,\r\n        three: black\r\n    },\r\n    {\r\n        type: reflex,\r\n        one: gold,\r\n        three: gold\r\n    },\r\n    /* {\r\n        type: conquer,\r\n        one: green,\r\n        two: blue\r\n    },\r\n    {\r\n        type: conquer,\r\n        one: blue,\r\n        two: black\r\n    },\r\n    {\r\n        type: conquer,\r\n        one: black,\r\n        two: red\r\n    },\r\n    {\r\n        type: conquer,\r\n        one: red,\r\n        two: gold\r\n    },\r\n    {\r\n        type: conquer,\r\n        one: gold,\r\n        two: green\r\n    }, */\r\n    {\r\n        type: haste,\r\n        one: gold,\r\n    },\r\n    {\r\n        type: haste,\r\n        one: blue,\r\n    },\r\n    {\r\n        type: haste,\r\n        one: green,\r\n    },\r\n    {\r\n        type: haste,\r\n        one: red,\r\n    },\r\n    {\r\n        type: haste,\r\n        one: black,\r\n    },\r\n    {\r\n        type: one,\r\n        one: red,\r\n        two: red,\r\n    },\r\n    {\r\n        type: one,\r\n        one: gold,\r\n        two: gold,\r\n    },\r\n    {\r\n        type: one,\r\n        one: blue,\r\n        two: blue,\r\n    },\r\n    {\r\n        type: one,\r\n        one: green,\r\n        two: green,\r\n    },\r\n    {\r\n        type: one,\r\n        one: black,\r\n        two: black,\r\n    },\r\n    {\r\n        type: one,\r\n        one: red,\r\n        four: red,\r\n    },\r\n    {\r\n        type: one,\r\n        one: gold,\r\n        four: gold,\r\n    },\r\n    {\r\n        type: one,\r\n        one: green,\r\n        four: green,\r\n    },\r\n    {\r\n        type: one,\r\n        one: blue,\r\n        four: blue,\r\n    },\r\n    {\r\n        type: one,\r\n        one: black,\r\n        four: black,\r\n    },\r\n    {\r\n        type: two,\r\n        one: blue,\r\n        three: blue,\r\n        seven: red\r\n    },\r\n    {\r\n        type: two,\r\n        one: black,\r\n        three: black,\r\n        seven: green\r\n    },\r\n    {\r\n        type: two,\r\n        one: gold,\r\n        three: gold,\r\n        seven: black\r\n    },\r\n    {\r\n        type: two,\r\n        one: red,\r\n        three: red,\r\n        seven: gold\r\n    },\r\n    {\r\n        type: two,\r\n        one: green,\r\n        three: green,\r\n        seven: blue\r\n    },\r\n    {\r\n        type: three,\r\n        two: gold,\r\n        three: black,\r\n        six: blue,\r\n        seven: red\r\n    },\r\n    {\r\n        type: three,\r\n        two: blue,\r\n        three: red,\r\n        six: black,\r\n        seven: green\r\n    },\r\n    {\r\n        type: three,\r\n        two: red,\r\n        three: gold,\r\n        six: green,\r\n        seven: blue\r\n    },\r\n    {\r\n        type: three,\r\n        two: green,\r\n        three: blue,\r\n        six: gold,\r\n        seven: black\r\n    },\r\n    {\r\n        type: three,\r\n        two: blue,\r\n        three: green,\r\n        six: red,\r\n        seven: gold\r\n    }\r\n];\r\n\r\nmodule.exports = {\r\n    colors: COLORS,\r\n    cards: CARDS\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558371368086
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\",\"filename\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\\\\src\\\\courrier.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\Damocles\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Matthew\\documents\\github\\Damocles",
      "filename": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src\\courrier.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Matthew\\documents\\github\\Damocles",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src\\courrier.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src\\courrier.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src",
        "sourceFileName": "courrier.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  cookify: \"Login Cookie Sent\",\n  newRoom: \"New Room Created\",\n  userJoined: \"User Joined\",\n  userReadied: \"User Ready\",\n  nextPlayer: \"Current Player Turn Finished\",\n  returnToLobby: \"Bounce to Lobby\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvdXJyaWVyLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjb29raWZ5IiwibmV3Um9vbSIsInVzZXJKb2luZWQiLCJ1c2VyUmVhZGllZCIsIm5leHRQbGF5ZXIiLCJyZXR1cm5Ub0xvYmJ5Il0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsT0FBTyxFQUFFLG1CQURJO0FBRWJDLEVBQUFBLE9BQU8sRUFBRSxrQkFGSTtBQUdiQyxFQUFBQSxVQUFVLEVBQUUsYUFIQztBQUliQyxFQUFBQSxXQUFXLEVBQUUsWUFKQTtBQUtiQyxFQUFBQSxVQUFVLEVBQUUsOEJBTEM7QUFNYkMsRUFBQUEsYUFBYSxFQUFFO0FBTkYsQ0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxNYXR0aGV3XFxkb2N1bWVudHNcXGdpdGh1YlxcRGFtb2NsZXNcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgY29va2lmeTogXCJMb2dpbiBDb29raWUgU2VudFwiLFxyXG4gICAgbmV3Um9vbTogXCJOZXcgUm9vbSBDcmVhdGVkXCIsXHJcbiAgICB1c2VySm9pbmVkOiBcIlVzZXIgSm9pbmVkXCIsXHJcbiAgICB1c2VyUmVhZGllZDogXCJVc2VyIFJlYWR5XCIsXHJcbiAgICBuZXh0UGxheWVyOiBcIkN1cnJlbnQgUGxheWVyIFR1cm4gRmluaXNoZWRcIixcclxuICAgIHJldHVyblRvTG9iYnk6IFwiQm91bmNlIHRvIExvYmJ5XCJcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "courrier.js"
      ],
      "names": [
        "module",
        "exports",
        "cookify",
        "newRoom",
        "userJoined",
        "userReadied",
        "nextPlayer",
        "returnToLobby"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,OAAO,EAAE,mBADI;AAEbC,EAAAA,OAAO,EAAE,kBAFI;AAGbC,EAAAA,UAAU,EAAE,aAHC;AAIbC,EAAAA,WAAW,EAAE,YAJA;AAKbC,EAAAA,UAAU,EAAE,8BALC;AAMbC,EAAAA,aAAa,EAAE;AANF,CAAjB",
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\Damocles\\src",
      "sourcesContent": [
        "module.exports = {\r\n    cookify: \"Login Cookie Sent\",\r\n    newRoom: \"New Room Created\",\r\n    userJoined: \"User Joined\",\r\n    userReadied: \"User Ready\",\r\n    nextPlayer: \"Current Player Turn Finished\",\r\n    returnToLobby: \"Bounce to Lobby\"\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558646020260
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\",\"filename\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\damocles\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Matthew\\documents\\github\\damocles",
      "filename": "C:\\Users\\Matthew\\documents\\github\\damocles\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Matthew\\documents\\github\\damocles",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Matthew\\documents\\github\\damocles\\src\\server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Matthew\\documents\\github\\damocles\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\damocles\\src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar gameStates = require(\"./gameStates.js\");\n\nvar courrier = require(\"./courrier.js\");\n\nvar _require = require('../cards'),\n    colors = _require.colors;\n\nvar _require2 = require('../cards'),\n    cards = _require2.cards;\n\nvar _require3 = require('pg'),\n    Client = _require3.Client;\n\nvar path = require('path'); //Postgres database connection\n\n/* const client = new Client({\r\n  connectionString: process.env.DATABASE_URL || \"postgres://matthew:cadenza@localhost:5432/tempdb\",\r\n});\r\nclient.connect(); */\n\n\nvar express = require('express'),\n    http = require('http');\n\nvar app = express();\nvar server = http.createServer(app);\n\nvar io = require('socket.io').listen(server); //Port server runs on\n\n\nvar port = process.env.PORT || 3000;\napp.use(\"/css\", express[\"static\"](path.resolve(__dirname + '/../css/')));\napp.use(\"/static\", express[\"static\"](path.resolve(__dirname + '/../static/')));\napp.use(\"/src\", express[\"static\"]('./src/'));\napp.use(\"/dist\", express[\"static\"](path.resolve(__dirname + '/../dist/'))); //Host the main page\n\napp.get('/', function (req, res) {\n  res.sendFile(path.resolve(__dirname + '/../index.html'));\n});\nvar MIN_PLAYERS = 2; //On initial connection\n\nio.on('connection', function (socket) {\n  console.log('a user connected');\n  socket.on('refreshCookie', function (data) {\n    socket.join('lobby');\n    socket.emit(courrier.cookify, {\n      cookie: setCookie(data),\n      gameState: gameStates.mainLobby,\n      availableGames: publicInstances\n    });\n  }); //Login via database if available\n\n  socket.on('login', function (data) {\n    var values = [data.username];\n    socket.join('lobby');\n    socket.emit(courrier.cookify, {\n      cookie: setCookie(values[0]),\n      gameState: gameStates.mainLobby,\n      availableGames: publicInstances\n    });\n  }); //Create a new game room\n\n  socket.on('roomcreated', function (data) {\n    var id = gameId;\n    var deck = shuffle(selectCards.slice());\n    var creator = data.creator;\n    var players = [];\n    var maxPlayers = data.players;\n    var played = [];\n    var points = [0];\n    var ready = 0;\n\n    if (data.name === \"p555test\") {\n      players.push({\n        name: 'B-9',\n        ready: true\n      });\n      played.push(deck.splice(0, 8));\n      points.push(0);\n      players.push({\n        name: 'The Iron Giant',\n        ready: true\n      });\n      played.push(deck.splice(0, 8));\n      points.push(0);\n      ready = 2;\n      maxPlayers = 3;\n    }\n\n    played.push([]);\n    players.push({\n      name: creator,\n      ready: false\n    });\n    var newInstance = {\n      creator: data.creator,\n      name: data.name,\n      maxPlayers: maxPlayers,\n      id: gameId,\n      deck: deck,\n      players: players,\n      ready: ready,\n      points: points,\n      gameState: gameStates.preGameLobby,\n      played: played,\n      numDiscarded: 0,\n      spaces: Array(7).fill(null),\n      colorCounts: colorNames.map(function (name) {\n        return {\n          color: name,\n          count: 4\n        };\n      }),\n      turn: 0,\n      chat: []\n    };\n    var newPublicInstance = {\n      creator: data.creator,\n      name: data.name,\n      maxPlayers: data.players,\n      currentPlayers: players.length,\n      id: gameId\n    };\n    gameInstances[id] = newInstance;\n    publicInstances.push(newPublicInstance);\n    io.to('lobby').emit(courrier.newRoom, {\n      availableGames: publicInstances\n    });\n    socket.leave('lobby');\n    socket.join('' + gameId);\n    socket.emit(courrier.userJoined, {\n      selectCards: deck.splice(0, 8),\n      gameState: newInstance.gameState,\n      players: newInstance.players,\n      chat: newInstance.chat,\n      played: newInstance.played,\n      id: newInstance.id,\n      pid: newInstance.players.length - 1,\n      points: newInstance.points\n    });\n    gameId += 1;\n  });\n  socket.on('roomjoined', function (data) {\n    var joinedInstance = gameInstances[data.id];\n    var user = data.user;\n    joinedInstance.players.push({\n      name: user,\n      ready: false\n    });\n    joinedInstance.points.push(0);\n    joinedInstance.played.push([]);\n    joinedInstance.pid++;\n    socket.leave('lobby');\n    socket.join('' + data.id);\n\n    if (joinedInstance.players.length === joinedInstance.maxPlayers) {\n      for (var i = 0; i < publicInstances.length; i++) {\n        if (publicInstances[i].id === data.id) {\n          publicInstances.splice(i, 1);\n          io.to('lobby').emit(courrier.newRoom, {\n            availableGames: publicInstances\n          });\n        }\n      }\n    }\n\n    gameInstances[data.id] = joinedInstance;\n    socket.emit(courrier.userJoined, {\n      selectCards: joinedInstance.deck.splice(0, 8),\n      gameState: joinedInstance.gameState,\n      id: joinedInstance.id,\n      pid: joinedInstance.players.length - 1\n    });\n    io.to('' + data.id).emit(\"userjoined\", {\n      players: joinedInstance.players,\n      chat: joinedInstance.chat,\n      played: joinedInstance.played,\n      points: joinedInstance.points\n    });\n  });\n  socket.on(\"sendChat\", function (data) {\n    var instance = gameInstances[data.id];\n    instance.chat.push({\n      user: data.user,\n      message: data.message\n    });\n    gameInstances[data.id] = instance;\n    io.to('' + data.id).emit(\"messageSent\", {\n      chat: instance.chat\n    });\n  });\n  socket.on('userreadied', function (data) {\n    var instance = gameInstances[data.id];\n    instance.ready += 1;\n\n    for (var i = 0; i < instance.players.length; i++) {\n      if (instance.players[i].name === data.user) {\n        instance.players[i].ready = true;\n        gameInstances[data.id] = instance;\n        io.to('' + data.id).emit(courrier.userReadied, {\n          players: instance.players\n        });\n        break;\n      }\n    }\n\n    if (instance.ready === instance.players.length && instance.ready >= MIN_PLAYERS) {\n      for (var _i = 0; _i < publicInstances.length; _i++) {\n        if (publicInstances[_i].id === data.id) {\n          publicInstances.splice(_i, 1);\n          io.to('lobby').emit(courrier.newRoom, {\n            availableGames: publicInstances\n          });\n        }\n      }\n\n      instance.gameState = gameStates.initialDiscard;\n      gameInstances[data.id] = instance;\n      io.to('' + data.id).emit('discardphase', {\n        spaces: instance.spaces,\n        colorCounts: instance.colorCounts,\n        gameState: instance.gameState,\n        played: instance.played,\n        processCode: null,\n        discardCount: 2,\n        points: instance.points\n      });\n    }\n  });\n  socket.on('discardPresetup', function (data) {\n    var instance = gameInstances[data.id];\n    instance.numDiscarded++;\n    socket.emit('cardUpdate', {\n      selectCards: data.newHand\n    });\n\n    if (instance.numDiscarded === instance.players.length) {\n      instance.currentPlayer = Math.floor(Math.random() * instance.players.length);\n      instance.gameState = \"setup\";\n      gameInstances[data.id] = instance;\n      io.to('' + data.id).emit('setupphase', {\n        gameState: instance.gameState,\n        currentPlayer: instance.currentPlayer\n      });\n    } else {\n      instance.gameState = \"standby\";\n      gameInstances[data.id] = instance;\n      socket.emit(\"standby\", {\n        gameState: instance.gameState\n      });\n    }\n  });\n  socket.on('nextPhase', function (data) {\n    var instance = gameInstances[data.id];\n\n    if (instance.gameState === gameStates.hasteCheck) {\n      instance.gameState = gameStates.swapBoard;\n    } else if (instance.gameState === 'playCards' || instance.gameState === gameStates.reflexed) {\n      instance.turn++;\n\n      if (instance.turn === instance.players.length * 8) {\n        instance.currentPlayer = null;\n        instance.gameState = \"gameover\";\n      } else {\n        instance.currentPlayer = (instance.currentPlayer + 1) % instance.players.length;\n        instance.gameState = gameStates.hasteCheck;\n      }\n    }\n\n    gameInstances[data.id] = instance;\n    io.to('' + data.id).emit(courrier.nextPlayer, {\n      gameState: instance.gameState,\n      currentPlayer: instance.currentPlayer\n    });\n  });\n  socket.on('boardChange', function (data) {\n    var instance = gameInstances[data.id];\n    instance.spaces = data.newSpaces;\n    instance.colorCounts = data.newCounts;\n\n    if (instance.gameState === \"setup\") {\n      instance.currentPlayer = (instance.currentPlayer + 1) % instance.players.length;\n\n      if (!instance.spaces.includes(null)) {\n        instance.gameState = gameStates.hasteCheck;\n      }\n    } else {\n      instance.gameState = \"playCards\";\n    }\n\n    gameInstances[data.id] = instance;\n    io.to('' + data.id).emit('boardChange', {\n      spaces: instance.spaces,\n      colorCounts: instance.colorCounts,\n      currentPlayer: instance.currentPlayer,\n      gameState: instance.gameState\n    });\n  });\n  socket.on('bonusswap', function (data) {\n    var instance = gameInstances[data.id];\n    instance.spaces = data.newSpaces;\n    instance.colorCounts = data.newCounts;\n    instance.gameState = gameStates.swapBoard;\n    gameInstances[data.id] = instance;\n    io.to('' + data.id).emit('boardChange', {\n      spaces: instance.spaces,\n      colorCounts: instance.colorCounts,\n      gameState: instance.gameState\n    });\n  });\n  socket.on('discardNormalHand', function (data) {\n    var instance = gameInstances[data.id];\n    instance.gameState = \"playCards\";\n    var tempCards = data.hand.slice();\n    socket.emit('boardChange', {\n      selectCards: tempCards\n    });\n    io.to('' + data.id).emit('boardChange', {\n      gameState: instance.gameState\n    });\n  });\n  socket.on('cardPlayed', function (data) {\n    var instance = gameInstances[data.id];\n    var newPlayed = instance.played[data.pid].slice();\n    var interacted = handleCardInteractions(data.newPlayed, data.oldPlayed, data.id);\n    instance.points[data.pid] += interacted.combust;\n    newPlayed = newPlayed.concat(interacted.played);\n    instance.played[data.pid] = newPlayed;\n    socket.emit('cardUpdate', {\n      selectCards: data.rest.concat(interacted.newCards)\n    });\n\n    if (interacted.processCode != null) {\n      instance.gameState = 'discardNormal';\n      socket.emit('discardphase', {\n        gameState: instance.gameState,\n        processCode: interacted.processCode,\n        discardCount: 2\n      });\n    }\n\n    if (interacted.stateEdit === \"H\") {\n      instance.gameState = gameStates.hasted;\n      socket.emit('bonusswap', {\n        gameState: instance.gameState\n      });\n    } else if (interacted.stateEdit === \"R\") {\n      instance.gameState = gameStates.reflexed;\n      socket.emit('reflexed', {\n        gameState: instance.gameState\n      });\n    } else {\n      if (instance.gameState === gameStates.reflexed && data.reflexused === true) {\n        instance.gameState = 'playCards';\n      }\n    }\n\n    gameInstances[data.id] = instance;\n    io.to('' + data.id).emit('cardPlayed', {\n      played: instance.played,\n      gameState: instance.gameState,\n      points: instance.points\n    });\n  });\n  socket.on(\"abandonRoom\", function (data) {\n    gameInstances[data.id] = [];\n\n    for (var i = 0; i < publicInstances.length; i++) {\n      if (publicInstances[i].id == data.id) {\n        publicInstances.splice(i, 1);\n        break;\n      }\n    }\n\n    var users = io.sockets.adapter.rooms['' + data.id].sockets;\n    Object.keys(users).forEach(function (client) {\n      var socket = io[\"in\"]('' + gameId).connected[client];\n      socket.leave('' + gameId);\n      socket.join('lobby');\n      socket.emit(courrier.returnToLobby, {\n        gameState: gameStates.mainLobby,\n        availableGames: publicInstances\n      });\n    });\n    io.to('lobby').emit(courrier.newRoom, {\n      availableGames: publicInstances\n    });\n  });\n});\nserver.listen(port, function () {\n  console.log('listening on *' + port);\n});\nvar colorNames = Object.values(colors);\nvar IDS = new Set();\nvar selectCards = cards.map(function (card) {\n  var intAdded = false;\n  var randInt = -1;\n  var spaces = Array(7).fill(null);\n  var points = 0;\n\n  if (card.one != null) {\n    spaces[0] = card.one;\n    points++;\n  }\n\n  if (card.two != null) {\n    spaces[1] = card.two;\n    points++;\n  }\n\n  if (card.three != null) {\n    spaces[2] = card.three;\n    points++;\n  }\n\n  if (card.four != null) {\n    spaces[3] = card.four;\n    points++;\n  }\n\n  if (card.five != null) {\n    spaces[4] = card.five;\n    points++;\n  }\n\n  if (card.six != null) {\n    spaces[5] = card.six;\n    points++;\n  }\n\n  if (card.seven != null) {\n    spaces[6] = card.seven;\n    points++;\n  }\n\n  while (!intAdded) {\n    randInt = Math.floor(Math.random() * 100000);\n\n    if (!IDS.has(randInt)) {\n      IDS.add(randInt);\n      intAdded = true;\n    }\n  }\n\n  card.ID = randInt;\n  card.spaces = spaces;\n  card.points = points;\n  return card;\n});\nvar gameId = 1;\nvar gameInstances = [];\nvar publicInstances = [];\n\nfunction shuffle(toShuffle) {\n  var arr = toShuffle.slice();\n\n  for (var i = arr.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n\n  return arr;\n}\n\nfunction setCookie(user) {\n  var d = new Date();\n  d.setTime(d.getTime() + 24 * 60 * 60 * 1000);\n  var expires = \"expires=\" + d.toUTCString();\n  return \"Damocles=\" + user + \"; \" + expires + \"; path=/\";\n}\n\nfunction handleCardInteractions(played, oldPlayed, id) {\n  var returnToPublic = [];\n  var returnMe = {\n    newCards: [],\n    processCode: null,\n    played: [],\n    combust: 0\n  };\n  var num = null;\n  var action = null;\n\n  for (var i = 0; i < played.length; i++) {\n    var current = played[i];\n\n    if (current.type === '1' || current.type === '2' || current.type === '3') {\n      num = parseInt(current.type);\n    } else {\n      action = current.type;\n    }\n\n    if (current.type != 'C') {\n      returnToPublic.push(current);\n    } else {\n      returnMe.combust += current.points;\n    }\n  }\n\n  for (var _i2 = 0; _i2 < oldPlayed.length; _i2++) {\n    var _current = oldPlayed[_i2];\n\n    if (_current.type === '1' || _current.type === '2' || _current.type === '3') {\n      num = parseInt(_current.type);\n    } else {\n      action = _current.type;\n    }\n  }\n\n  returnMe.played = returnToPublic.slice();\n\n  if (num != null) {\n    if (action === \"C\") {\n      Object.assign(returnMe, {\n        newCards: gameInstances[id].deck.splice(0, num + 1)\n      });\n    } else if (action === \"O\") {\n      Object.assign(returnMe, {\n        newCards: gameInstances[id].deck.splice(0, num + 2),\n        processCode: num + 2\n      });\n    } else if (action === \"G\") {\n      Object.assign(returnMe, {\n        newCards: gameInstances[id].deck.splice(0, num)\n      });\n    } else {\n      console.log(\"Something went wrong\");\n    }\n  } else {\n    if (action === \"A\") {\n      //use opponents revealed\n      Object.assign(returnMe, {\n        stateEdit: \"A\"\n      });\n    } else if (action === \"R\") {\n      //use relative position\n      Object.assign(returnMe, {\n        stateEdit: \"R\"\n      });\n    } else if (action === \"H\") {\n      //swap twice\n      Object.assign(returnMe, {\n        stateEdit: \"H\"\n      });\n    } else {\n      console.log(\"Something went wrong\");\n    }\n  }\n\n  return returnMe;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "gameStates",
        "require",
        "courrier",
        "colors",
        "cards",
        "Client",
        "path",
        "express",
        "http",
        "app",
        "server",
        "createServer",
        "io",
        "listen",
        "port",
        "process",
        "env",
        "PORT",
        "use",
        "resolve",
        "__dirname",
        "get",
        "req",
        "res",
        "sendFile",
        "MIN_PLAYERS",
        "on",
        "socket",
        "console",
        "log",
        "data",
        "join",
        "emit",
        "cookify",
        "cookie",
        "setCookie",
        "gameState",
        "mainLobby",
        "availableGames",
        "publicInstances",
        "values",
        "username",
        "id",
        "gameId",
        "deck",
        "shuffle",
        "selectCards",
        "slice",
        "creator",
        "players",
        "maxPlayers",
        "played",
        "points",
        "ready",
        "name",
        "push",
        "splice",
        "newInstance",
        "preGameLobby",
        "numDiscarded",
        "spaces",
        "Array",
        "fill",
        "colorCounts",
        "colorNames",
        "map",
        "color",
        "count",
        "turn",
        "chat",
        "newPublicInstance",
        "currentPlayers",
        "length",
        "gameInstances",
        "to",
        "newRoom",
        "leave",
        "userJoined",
        "pid",
        "joinedInstance",
        "user",
        "i",
        "instance",
        "message",
        "userReadied",
        "initialDiscard",
        "processCode",
        "discardCount",
        "newHand",
        "currentPlayer",
        "Math",
        "floor",
        "random",
        "hasteCheck",
        "swapBoard",
        "reflexed",
        "nextPlayer",
        "newSpaces",
        "newCounts",
        "includes",
        "tempCards",
        "hand",
        "newPlayed",
        "interacted",
        "handleCardInteractions",
        "oldPlayed",
        "combust",
        "concat",
        "rest",
        "newCards",
        "stateEdit",
        "hasted",
        "reflexused",
        "users",
        "sockets",
        "adapter",
        "rooms",
        "Object",
        "keys",
        "forEach",
        "client",
        "connected",
        "returnToLobby",
        "IDS",
        "Set",
        "card",
        "intAdded",
        "randInt",
        "one",
        "two",
        "three",
        "four",
        "five",
        "six",
        "seven",
        "has",
        "add",
        "ID",
        "toShuffle",
        "arr",
        "j",
        "temp",
        "d",
        "Date",
        "setTime",
        "getTime",
        "expires",
        "toUTCString",
        "returnToPublic",
        "returnMe",
        "num",
        "action",
        "current",
        "type",
        "parseInt",
        "assign"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\damocles\\src",
      "sourcesContent": [
        "const gameStates = require(\"./gameStates.js\");\r\nconst courrier = require(\"./courrier.js\");\r\nvar {colors} = require('../cards');\r\nvar {cards} = require('../cards');\r\nconst { Client } = require('pg');\r\nvar path = require('path');\r\n\r\n//Postgres database connection\r\n/* const client = new Client({\r\n  connectionString: process.env.DATABASE_URL || \"postgres://matthew:cadenza@localhost:5432/tempdb\",\r\n});\r\nclient.connect(); */\r\nvar express = require('express'),\r\n    http = require('http');\r\nvar app = express();\r\nvar server = http.createServer(app);\r\nvar io = require('socket.io').listen(server);\r\n\r\n//Port server runs on\r\nvar port = process.env.PORT || 3000;\r\n\r\napp.use(\"/css\", express.static(path.resolve(__dirname + '/../css/')));\r\napp.use(\"/static\", express.static(path.resolve(__dirname + '/../static/')));\r\napp.use(\"/src\", express.static('./src/'));\r\napp.use(\"/dist\", express.static(path.resolve(__dirname + '/../dist/')));\r\n//Host the main page\r\napp.get('/', function(req, res){\r\n  res.sendFile(path.resolve(__dirname + ('/../index.html')));\r\n});\r\n\r\nconst MIN_PLAYERS = 2;\r\n//On initial connection\r\nio.on('connection', function(socket) {\r\n    console.log('a user connected');\r\n    socket.on('refreshCookie', function(data) {\r\n        socket.join('lobby');\r\n        socket.emit(courrier.cookify, { \r\n            cookie: setCookie(data),\r\n            gameState: gameStates.mainLobby,\r\n            availableGames: publicInstances\r\n        });\r\n    });\r\n    //Login via database if available\r\n    socket.on('login', function(data) {\r\n\r\n        const values = [data.username];\r\n        socket.join('lobby');\r\n        socket.emit(courrier.cookify, {\r\n            cookie: setCookie(values[0]),\r\n            gameState: gameStates.mainLobby,\r\n            availableGames: publicInstances\r\n        });\r\n    });\r\n    //Create a new game room\r\n    socket.on('roomcreated', function(data) {\r\n        let id = gameId;\r\n        let deck = shuffle(selectCards.slice());\r\n        let creator = data.creator;\r\n        let players = [];\r\n        let maxPlayers = data.players;\r\n        let played = [];\r\n        let points = [0];\r\n        let ready = 0;\r\n        if (data.name === \"p555test\") {\r\n            players.push({ name: 'B-9', ready: true});\r\n            played.push(deck.splice(0, 8));\r\n            points.push(0);\r\n            players.push({ name: 'The Iron Giant', ready: true});\r\n            played.push(deck.splice(0, 8));\r\n            points.push(0);\r\n            ready = 2;\r\n            maxPlayers = 3;\r\n        }\r\n        played.push([]);\r\n        players.push({ name: creator, ready: false });\r\n        let newInstance = {\r\n            creator: data.creator,\r\n            name: data.name,\r\n            maxPlayers: maxPlayers,\r\n            id: gameId,\r\n            deck: deck,\r\n            players: players,\r\n            ready: ready,\r\n            points: points,\r\n            gameState: gameStates.preGameLobby,\r\n            played: played,\r\n            numDiscarded: 0,\r\n            spaces: Array(7).fill(null),\r\n            colorCounts: colorNames.map(name => ({ color: name, count: 4 })),\r\n            turn: 0,\r\n            chat: []\r\n        };\r\n        let newPublicInstance = {\r\n            creator: data.creator,\r\n            name: data.name,\r\n            maxPlayers: data.players,\r\n            currentPlayers: players.length,\r\n            id: gameId\r\n        };\r\n        gameInstances[id] = newInstance;\r\n        publicInstances.push(newPublicInstance);\r\n        io.to('lobby').emit(courrier.newRoom, {\r\n            availableGames: publicInstances\r\n        });\r\n        socket.leave('lobby');\r\n        socket.join('' + gameId);\r\n        socket.emit(courrier.userJoined, {\r\n            selectCards: deck.splice(0, 8),\r\n            gameState: newInstance.gameState,\r\n            players: newInstance.players,\r\n            chat: newInstance.chat,\r\n            played: newInstance.played,\r\n            id: newInstance.id,\r\n            pid: newInstance.players.length - 1,\r\n            points: newInstance.points,\r\n        });\r\n        gameId += 1;\r\n    });\r\n    socket.on('roomjoined', function(data) {\r\n        let joinedInstance = gameInstances[data.id];\r\n        let user = data.user;\r\n        joinedInstance.players.push({ name: user, ready: false});\r\n        joinedInstance.points.push(0);\r\n        joinedInstance.played.push([]);\r\n        joinedInstance.pid++;\r\n        socket.leave('lobby');\r\n        socket.join('' + data.id);\r\n        if (joinedInstance.players.length === joinedInstance.maxPlayers) {\r\n            for (let i = 0; i < publicInstances.length; i++) {\r\n                if (publicInstances[i].id === data.id) {\r\n                    publicInstances.splice(i, 1);\r\n                    io.to('lobby').emit(courrier.newRoom, {\r\n                        availableGames: publicInstances\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        gameInstances[data.id] = joinedInstance;\r\n        socket.emit(courrier.userJoined, {\r\n            selectCards: joinedInstance.deck.splice(0,8),\r\n            gameState: joinedInstance.gameState,\r\n            id: joinedInstance.id,\r\n            pid: joinedInstance.players.length - 1,\r\n        });\r\n        io.to('' + data.id).emit(\"userjoined\", {\r\n            players: joinedInstance.players,\r\n            chat: joinedInstance.chat,\r\n            played: joinedInstance.played,\r\n            points: joinedInstance.points\r\n        });\r\n\r\n    });\r\n    socket.on(\"sendChat\", function(data) {\r\n        let instance = gameInstances[data.id];\r\n        instance.chat.push({user: data.user, message: data.message});\r\n        gameInstances[data.id] = instance;\r\n        io.to('' + data.id).emit(\"messageSent\", {\r\n            chat: instance.chat\r\n        });\r\n    });\r\n    socket.on('userreadied', function(data) {\r\n        let instance = gameInstances[data.id];\r\n        instance.ready += 1;\r\n        for (let i = 0; i < instance.players.length; i++) {\r\n            if (instance.players[i].name === data.user) {\r\n                instance.players[i].ready = true;\r\n                gameInstances[data.id] = instance;\r\n                io.to('' + data.id).emit(courrier.userReadied, {\r\n                    players: instance.players\r\n                });\r\n                break;\r\n            }\r\n        }\r\n        if (instance.ready === instance.players.length && instance.ready >= MIN_PLAYERS) {\r\n            for (let i = 0; i < publicInstances.length; i++) {\r\n                if (publicInstances[i].id === data.id) {\r\n                    publicInstances.splice(i, 1);\r\n                    io.to('lobby').emit(courrier.newRoom, {\r\n                        availableGames: publicInstances\r\n                    })\r\n                }\r\n            }\r\n            instance.gameState = gameStates.initialDiscard;\r\n            gameInstances[data.id] = instance;\r\n            io.to('' + data.id).emit('discardphase', {\r\n                spaces: instance.spaces,\r\n                colorCounts: instance.colorCounts,\r\n                gameState: instance.gameState,\r\n                played: instance.played,\r\n                processCode: null,\r\n                discardCount: 2,\r\n                points: instance.points\r\n            });\r\n        }\r\n    });\r\n    socket.on('discardPresetup', function(data) {\r\n        let instance = gameInstances[data.id];\r\n        instance.numDiscarded++;\r\n        socket.emit('cardUpdate', {\r\n            selectCards: data.newHand\r\n        });\r\n        if (instance.numDiscarded === instance.players.length) {\r\n            instance.currentPlayer = Math.floor(Math.random() * instance.players.length);\r\n            instance.gameState = \"setup\";\r\n            gameInstances[data.id] = instance;\r\n            io.to('' + data.id).emit('setupphase', {\r\n                gameState: instance.gameState,\r\n                currentPlayer: instance.currentPlayer,\r\n            });\r\n        } else {\r\n            instance.gameState = \"standby\";\r\n            gameInstances[data.id] = instance;\r\n            socket.emit(\"standby\", {\r\n                gameState: instance.gameState\r\n            });\r\n        }\r\n    });\r\n    socket.on('nextPhase', function(data) {\r\n        let instance = gameInstances[data.id];\r\n        if (instance.gameState === gameStates.hasteCheck) {\r\n            instance.gameState = gameStates.swapBoard;\r\n        } else if (instance.gameState === 'playCards' || instance.gameState === gameStates.reflexed) {\r\n            instance.turn++;\r\n            if (instance.turn === instance.players.length * 8) {\r\n                instance.currentPlayer = null;\r\n                instance.gameState = \"gameover\";\r\n            } else {\r\n                instance.currentPlayer = ((instance.currentPlayer + 1) % instance.players.length);\r\n                instance.gameState = gameStates.hasteCheck;\r\n            }\r\n        }\r\n        gameInstances[data.id] = instance;\r\n        io.to('' + data.id).emit(courrier.nextPlayer, {\r\n            gameState: instance.gameState,\r\n            currentPlayer: instance.currentPlayer\r\n        });\r\n    });\r\n    socket.on('boardChange', function(data) {\r\n        let instance = gameInstances[data.id];\r\n        instance.spaces = data.newSpaces;\r\n        instance.colorCounts = data.newCounts;\r\n        if (instance.gameState === \"setup\") {\r\n            instance.currentPlayer = ((instance.currentPlayer + 1) % instance.players.length);\r\n            if (!instance.spaces.includes(null)) {\r\n                instance.gameState = gameStates.hasteCheck;\r\n            }\r\n        } else {\r\n            instance.gameState = \"playCards\";\r\n        }\r\n        gameInstances[data.id] = instance;\r\n        io.to('' + data.id).emit('boardChange', {  \r\n            spaces: instance.spaces,\r\n            colorCounts: instance.colorCounts,\r\n            currentPlayer: instance.currentPlayer,\r\n            gameState: instance.gameState,\r\n        });\r\n    });\r\n    socket.on('bonusswap', function(data) {\r\n        let instance = gameInstances[data.id];\r\n        instance.spaces = data.newSpaces;\r\n        instance.colorCounts = data.newCounts;\r\n        instance.gameState = gameStates.swapBoard;\r\n        gameInstances[data.id] = instance;\r\n        io.to('' + data.id).emit('boardChange', {  \r\n            spaces: instance.spaces,\r\n            colorCounts: instance.colorCounts,\r\n            gameState: instance.gameState,\r\n        });\r\n    });\r\n    socket.on('discardNormalHand', function(data) {\r\n        let instance = gameInstances[data.id];\r\n        instance.gameState = \"playCards\";\r\n        let tempCards = data.hand.slice();\r\n        socket.emit('boardChange', {\r\n            selectCards: tempCards\r\n        });\r\n        io.to('' + data.id).emit('boardChange', {\r\n            gameState: instance.gameState,\r\n\r\n        });\r\n    });\r\n    socket.on('cardPlayed', function(data) {\r\n        let instance = gameInstances[data.id];\r\n        let newPlayed = instance.played[data.pid].slice();\r\n        let interacted = handleCardInteractions(data.newPlayed, data.oldPlayed, data.id);\r\n        instance.points[data.pid] += interacted.combust;\r\n        newPlayed = newPlayed.concat(interacted.played);\r\n        instance.played[data.pid] = newPlayed;\r\n        socket.emit('cardUpdate', {\r\n            selectCards: data.rest.concat(interacted.newCards)\r\n        });\r\n        if (interacted.processCode != null) {\r\n            instance.gameState = 'discardNormal';\r\n            socket.emit('discardphase', {\r\n                gameState: instance.gameState,\r\n                processCode: interacted.processCode,\r\n                discardCount: 2\r\n            })\r\n        }\r\n        if (interacted.stateEdit === \"H\") {\r\n            instance.gameState = gameStates.hasted;\r\n            socket.emit('bonusswap', {\r\n                gameState: instance.gameState\r\n            });\r\n        } else if (interacted.stateEdit === \"R\") {\r\n            instance.gameState = gameStates.reflexed;\r\n            socket.emit('reflexed', {\r\n                gameState: instance.gameState\r\n            });\r\n        } else {\r\n            if (instance.gameState === gameStates.reflexed && data.reflexused === true) {\r\n                instance.gameState = 'playCards';\r\n            }\r\n        }\r\n        gameInstances[data.id] = instance;\r\n        io.to('' + data.id).emit('cardPlayed', {\r\n            played: instance.played,\r\n            gameState: instance.gameState,\r\n            points: instance.points\r\n        });\r\n    });\r\n    socket.on(\"abandonRoom\", function(data) {\r\n        gameInstances[data.id] = [];\r\n        for(let i = 0; i < publicInstances.length; i++) {\r\n            if (publicInstances[i].id == data.id) {\r\n                publicInstances.splice(i ,1);\r\n                break;\r\n            }\r\n        }\r\n        var users = io.sockets.adapter.rooms['' + data.id].sockets;\r\n        Object.keys(users).forEach(function(client) {\r\n            let socket = io.in('' + gameId).connected[client];\r\n            socket.leave('' + gameId);\r\n            socket.join('lobby');\r\n            socket.emit(courrier.returnToLobby, {\r\n                gameState: gameStates.mainLobby,\r\n                availableGames: publicInstances\r\n            });\r\n        });\r\n        io.to('lobby').emit(courrier.newRoom, {\r\n            availableGames: publicInstances\r\n        });\r\n    });\r\n});\r\n\r\nserver.listen(port, function() {\r\n    console.log('listening on *' + port);\r\n});\r\n\r\nconst colorNames = Object.values(colors);\r\nvar IDS = new Set();\r\n\r\nvar selectCards = cards.map(card => {\r\n    let intAdded = false;\r\n    let randInt = -1;\r\n    let spaces = Array(7).fill(null);\r\n    let points = 0;\r\n    if (card.one != null) { spaces[0] = card.one; points++; }\r\n    if (card.two != null) { spaces[1] = card.two; points++; }\r\n    if (card.three != null) { spaces[2] = card.three; points++; }\r\n    if (card.four != null) { spaces[3] = card.four; points++; }\r\n    if (card.five != null) { spaces[4] = card.five; points++; }\r\n    if (card.six != null) { spaces[5] = card.six; points++; }\r\n    if (card.seven != null) { spaces[6] = card.seven; points++; }\r\n    while (!intAdded) {\r\n        randInt = Math.floor(Math.random() * 100000);\r\n        if (!IDS.has(randInt)) {\r\n            IDS.add(randInt);\r\n            intAdded = true;\r\n        }\r\n    }\r\n    card.ID = randInt;\r\n    card.spaces = spaces;\r\n    card.points = points;\r\n    return card;\r\n});\r\n\r\nvar gameId = 1;\r\nvar gameInstances = [];\r\nvar publicInstances = [];\r\n\r\nfunction shuffle(toShuffle) {\r\n    let arr = toShuffle.slice();\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        let temp = arr[i];\r\n        arr[i] = arr[j];\r\n        arr[j] = temp;\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction setCookie(user) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + 24 * 60 * 60 * 1000);\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    return (\"Damocles=\" + user + \"; \" + expires + \"; path=/\");\r\n}\r\n\r\nfunction handleCardInteractions(played, oldPlayed, id) {\r\n    let returnToPublic = [];\r\n    let returnMe = {\r\n        newCards: [],\r\n        processCode: null,\r\n        played: [],\r\n        combust: 0\r\n    }\r\n    let num = null;\r\n    let action = null;\r\n    for (let i = 0; i < played.length; i++) {\r\n        let current = played[i];\r\n        if (current.type === '1' || current.type === '2' || current.type === '3') {\r\n            num = parseInt(current.type);\r\n        }\r\n        else {\r\n            action = current.type;\r\n        }\r\n        if (current.type != 'C') {\r\n            returnToPublic.push(current);\r\n        } else {\r\n            returnMe.combust += current.points;\r\n        }\r\n    }\r\n    for (let i = 0; i < oldPlayed.length; i++) {\r\n        let current = oldPlayed[i];\r\n        if (current.type === '1' || current.type === '2' || current.type === '3') {\r\n            num = parseInt(current.type);\r\n        }\r\n        else {\r\n            action = current.type;\r\n        }\r\n    }\r\n    returnMe.played = returnToPublic.slice();\r\n    if (num != null) {\r\n        if (action === \"C\") {\r\n            Object.assign(returnMe, {\r\n                newCards: gameInstances[id].deck.splice(0, num + 1)\r\n            });\r\n        } else if (action === \"O\") {\r\n            Object.assign(returnMe, {\r\n                newCards: gameInstances[id].deck.splice(0, num + 2),\r\n                processCode: num + 2\r\n            });\r\n        } else if (action === \"G\" ) {\r\n            Object.assign(returnMe, {\r\n                newCards: gameInstances[id].deck.splice(0, num)\r\n            });\r\n        } else {\r\n            console.log(\"Something went wrong\");\r\n        }\r\n    } else {\r\n        if (action === \"A\") { //use opponents revealed\r\n            Object.assign(returnMe, {\r\n                stateEdit: \"A\"\r\n            })\r\n        } else if (action === \"R\") { //use relative position\r\n            Object.assign(returnMe, {\r\n                stateEdit: \"R\"\r\n            })\r\n        } else if (action === \"H\") { //swap twice\r\n            Object.assign(returnMe, {\r\n                stateEdit: \"H\"\r\n            });\r\n        } else {\r\n            console.log(\"Something went wrong\");\r\n        }\r\n    }\r\n    return returnMe;\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1558646096155
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\",\"filename\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\\\\src\\\\gameStates.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\damocles\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Matthew\\documents\\github\\damocles",
      "filename": "C:\\Users\\Matthew\\documents\\github\\damocles\\src\\gameStates.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Matthew\\documents\\github\\damocles",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Matthew\\documents\\github\\damocles\\src\\gameStates.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Matthew\\documents\\github\\damocles\\src\\gameStates.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\damocles\\src",
        "sourceFileName": "gameStates.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  mainLobby: \"Main Lobby\",\n  preGameLobby: \"Pre-Game Lobby\",\n  initialDiscard: \"Initial Discard\",\n  hasteCheck: \"Haste Check\",\n  swapBoard: \"Swap Board\",\n  hasted: \"Hasted\",\n  reflexed: \"Reflexed\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbWVTdGF0ZXMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm1haW5Mb2JieSIsInByZUdhbWVMb2JieSIsImluaXRpYWxEaXNjYXJkIiwiaGFzdGVDaGVjayIsInN3YXBCb2FyZCIsImhhc3RlZCIsInJlZmxleGVkIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsU0FBUyxFQUFPLFlBREg7QUFFYkMsRUFBQUEsWUFBWSxFQUFJLGdCQUZIO0FBR2JDLEVBQUFBLGNBQWMsRUFBRSxpQkFISDtBQUliQyxFQUFBQSxVQUFVLEVBQU0sYUFKSDtBQUtiQyxFQUFBQSxTQUFTLEVBQU8sWUFMSDtBQU1iQyxFQUFBQSxNQUFNLEVBQVUsUUFOSDtBQU9iQyxFQUFBQSxRQUFRLEVBQVE7QUFQSCxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXE1hdHRoZXdcXGRvY3VtZW50c1xcZ2l0aHViXFxkYW1vY2xlc1xcc3JjIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBtYWluTG9iYnk6ICAgICAgXCJNYWluIExvYmJ5XCIsXHJcbiAgICBwcmVHYW1lTG9iYnk6ICAgXCJQcmUtR2FtZSBMb2JieVwiLFxyXG4gICAgaW5pdGlhbERpc2NhcmQ6IFwiSW5pdGlhbCBEaXNjYXJkXCIsXHJcbiAgICBoYXN0ZUNoZWNrOiAgICAgXCJIYXN0ZSBDaGVja1wiLFxyXG4gICAgc3dhcEJvYXJkOiAgICAgIFwiU3dhcCBCb2FyZFwiLFxyXG4gICAgaGFzdGVkOiAgICAgICAgIFwiSGFzdGVkXCIsXHJcbiAgICByZWZsZXhlZDogICAgICAgXCJSZWZsZXhlZFwiLFxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "gameStates.js"
      ],
      "names": [
        "module",
        "exports",
        "mainLobby",
        "preGameLobby",
        "initialDiscard",
        "hasteCheck",
        "swapBoard",
        "hasted",
        "reflexed"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,SAAS,EAAO,YADH;AAEbC,EAAAA,YAAY,EAAI,gBAFH;AAGbC,EAAAA,cAAc,EAAE,iBAHH;AAIbC,EAAAA,UAAU,EAAM,aAJH;AAKbC,EAAAA,SAAS,EAAO,YALH;AAMbC,EAAAA,MAAM,EAAU,QANH;AAObC,EAAAA,QAAQ,EAAQ;AAPH,CAAjB",
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\damocles\\src",
      "sourcesContent": [
        "module.exports = {\r\n    mainLobby:      \"Main Lobby\",\r\n    preGameLobby:   \"Pre-Game Lobby\",\r\n    initialDiscard: \"Initial Discard\",\r\n    hasteCheck:     \"Haste Check\",\r\n    swapBoard:      \"Swap Board\",\r\n    hasted:         \"Hasted\",\r\n    reflexed:       \"Reflexed\",\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558646020260
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\",\"filename\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\\\\src\\\\courrier.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\damocles\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Matthew\\documents\\github\\damocles",
      "filename": "C:\\Users\\Matthew\\documents\\github\\damocles\\src\\courrier.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Matthew\\documents\\github\\damocles",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Matthew\\documents\\github\\damocles\\src\\courrier.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Matthew\\documents\\github\\damocles\\src\\courrier.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\damocles\\src",
        "sourceFileName": "courrier.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  cookify: \"Login Cookie Sent\",\n  newRoom: \"New Room Created\",\n  userJoined: \"User Joined\",\n  userReadied: \"User Ready\",\n  nextPlayer: \"Current Player Turn Finished\",\n  returnToLobby: \"Bounce to Lobby\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvdXJyaWVyLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjb29raWZ5IiwibmV3Um9vbSIsInVzZXJKb2luZWQiLCJ1c2VyUmVhZGllZCIsIm5leHRQbGF5ZXIiLCJyZXR1cm5Ub0xvYmJ5Il0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsT0FBTyxFQUFFLG1CQURJO0FBRWJDLEVBQUFBLE9BQU8sRUFBRSxrQkFGSTtBQUdiQyxFQUFBQSxVQUFVLEVBQUUsYUFIQztBQUliQyxFQUFBQSxXQUFXLEVBQUUsWUFKQTtBQUtiQyxFQUFBQSxVQUFVLEVBQUUsOEJBTEM7QUFNYkMsRUFBQUEsYUFBYSxFQUFFO0FBTkYsQ0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxNYXR0aGV3XFxkb2N1bWVudHNcXGdpdGh1YlxcZGFtb2NsZXNcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgY29va2lmeTogXCJMb2dpbiBDb29raWUgU2VudFwiLFxyXG4gICAgbmV3Um9vbTogXCJOZXcgUm9vbSBDcmVhdGVkXCIsXHJcbiAgICB1c2VySm9pbmVkOiBcIlVzZXIgSm9pbmVkXCIsXHJcbiAgICB1c2VyUmVhZGllZDogXCJVc2VyIFJlYWR5XCIsXHJcbiAgICBuZXh0UGxheWVyOiBcIkN1cnJlbnQgUGxheWVyIFR1cm4gRmluaXNoZWRcIixcclxuICAgIHJldHVyblRvTG9iYnk6IFwiQm91bmNlIHRvIExvYmJ5XCJcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "courrier.js"
      ],
      "names": [
        "module",
        "exports",
        "cookify",
        "newRoom",
        "userJoined",
        "userReadied",
        "nextPlayer",
        "returnToLobby"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,OAAO,EAAE,mBADI;AAEbC,EAAAA,OAAO,EAAE,kBAFI;AAGbC,EAAAA,UAAU,EAAE,aAHC;AAIbC,EAAAA,WAAW,EAAE,YAJA;AAKbC,EAAAA,UAAU,EAAE,8BALC;AAMbC,EAAAA,aAAa,EAAE;AANF,CAAjB",
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\damocles\\src",
      "sourcesContent": [
        "module.exports = {\r\n    cookify: \"Login Cookie Sent\",\r\n    newRoom: \"New Room Created\",\r\n    userJoined: \"User Joined\",\r\n    userReadied: \"User Ready\",\r\n    nextPlayer: \"Current Player Turn Finished\",\r\n    returnToLobby: \"Bounce to Lobby\"\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558646020260
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\",\"filename\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\\\\cards.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Matthew\\\\documents\\\\github\\\\damocles\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\damocles",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Matthew\\documents\\github\\damocles",
      "filename": "C:\\Users\\Matthew\\documents\\github\\damocles\\cards.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Matthew\\documents\\github\\damocles",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Matthew\\documents\\github\\damocles\\cards.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Matthew\\documents\\github\\damocles\\cards.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\damocles",
        "sourceFileName": "cards.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar COLORS = {\n  RED: \"red\",\n  BLUE: \"blue\",\n  GREEN: \"green\",\n  BLACK: \"black\",\n  GOLD: \"gold\"\n};\nvar gold = COLORS.GOLD;\nvar generate = \"G\";\nvar blue = COLORS.BLUE;\nvar red = COLORS.RED;\nvar green = COLORS.GREEN;\nvar gold = COLORS.GOLD;\nvar black = COLORS.BLACK;\nvar combust = \"C\";\nvar oracle = \"O\";\nvar reflex = \"R\";\nvar conquer = \"A\";\nvar haste = \"H\";\nvar one = \"1\";\nvar two = \"2\";\nvar three = \"3\";\nvar CARDS = [{\n  type: generate,\n  one: gold,\n  four: blue,\n  five: blue\n}, {\n  type: generate,\n  one: gold,\n  four: green,\n  five: green\n}, {\n  type: generate,\n  one: blue,\n  four: black,\n  five: black\n}, {\n  type: generate,\n  one: blue,\n  four: gold,\n  five: gold\n}, {\n  type: generate,\n  one: green,\n  four: black,\n  five: black\n}, {\n  type: generate,\n  one: green,\n  four: blue,\n  five: blue\n}, {\n  type: generate,\n  one: red,\n  four: green,\n  five: green\n}, {\n  type: generate,\n  one: red,\n  four: gold,\n  five: gold\n}, {\n  type: generate,\n  one: black,\n  four: red,\n  five: red\n}, {\n  type: generate,\n  one: black,\n  four: gold,\n  five: gold\n}, {\n  type: combust,\n  one: red,\n  three: blue,\n  six: blue\n}, {\n  type: combust,\n  one: red,\n  three: black,\n  six: black\n}, {\n  type: combust,\n  one: blue,\n  three: green,\n  six: green\n}, {\n  type: combust,\n  one: blue,\n  three: gold,\n  six: gold\n}, {\n  type: combust,\n  one: green,\n  three: red,\n  six: red\n}, {\n  type: combust,\n  one: green,\n  three: gold,\n  six: gold\n}, {\n  type: combust,\n  one: black,\n  three: blue,\n  six: blue\n}, {\n  type: combust,\n  one: black,\n  three: green,\n  six: green\n}, {\n  type: combust,\n  one: gold,\n  three: black,\n  six: black\n}, {\n  type: combust,\n  one: gold,\n  three: red,\n  six: red\n}, {\n  type: oracle,\n  one: red,\n  two: black,\n  seven: green\n}, {\n  type: oracle,\n  one: blue,\n  three: green,\n  seven: red\n}, {\n  type: oracle,\n  one: gold,\n  two: black,\n  six: blue\n}, {\n  type: oracle,\n  one: black,\n  four: red,\n  five: gold\n}, {\n  type: oracle,\n  one: green,\n  three: gold,\n  six: blue\n}, {\n  type: reflex,\n  one: green,\n  three: green\n}, {\n  type: reflex,\n  one: red,\n  three: red\n}, {\n  type: reflex,\n  one: blue,\n  three: blue\n}, {\n  type: reflex,\n  one: black,\n  three: black\n}, {\n  type: reflex,\n  one: gold,\n  three: gold\n},\n/* {\r\n    type: conquer,\r\n    one: green,\r\n    two: blue\r\n},\r\n{\r\n    type: conquer,\r\n    one: blue,\r\n    two: black\r\n},\r\n{\r\n    type: conquer,\r\n    one: black,\r\n    two: red\r\n},\r\n{\r\n    type: conquer,\r\n    one: red,\r\n    two: gold\r\n},\r\n{\r\n    type: conquer,\r\n    one: gold,\r\n    two: green\r\n}, */\n{\n  type: haste,\n  one: gold\n}, {\n  type: haste,\n  one: blue\n}, {\n  type: haste,\n  one: green\n}, {\n  type: haste,\n  one: red\n}, {\n  type: haste,\n  one: black\n}, {\n  type: one,\n  one: red,\n  two: red\n}, {\n  type: one,\n  one: gold,\n  two: gold\n}, {\n  type: one,\n  one: blue,\n  two: blue\n}, {\n  type: one,\n  one: green,\n  two: green\n}, {\n  type: one,\n  one: black,\n  two: black\n}, {\n  type: one,\n  one: red,\n  four: red\n}, {\n  type: one,\n  one: gold,\n  four: gold\n}, {\n  type: one,\n  one: green,\n  four: green\n}, {\n  type: one,\n  one: blue,\n  four: blue\n}, {\n  type: one,\n  one: black,\n  four: black\n}, {\n  type: two,\n  one: blue,\n  three: blue,\n  seven: red\n}, {\n  type: two,\n  one: black,\n  three: black,\n  seven: green\n}, {\n  type: two,\n  one: gold,\n  three: gold,\n  seven: black\n}, {\n  type: two,\n  one: red,\n  three: red,\n  seven: gold\n}, {\n  type: two,\n  one: green,\n  three: green,\n  seven: blue\n}, {\n  type: three,\n  two: gold,\n  three: black,\n  six: blue,\n  seven: red\n}, {\n  type: three,\n  two: blue,\n  three: red,\n  six: black,\n  seven: green\n}, {\n  type: three,\n  two: red,\n  three: gold,\n  six: green,\n  seven: blue\n}, {\n  type: three,\n  two: green,\n  three: blue,\n  six: gold,\n  seven: black\n}, {\n  type: three,\n  two: blue,\n  three: green,\n  six: red,\n  seven: gold\n}];\nmodule.exports = {\n  colors: COLORS,\n  cards: CARDS\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "cards.js"
      ],
      "names": [
        "COLORS",
        "RED",
        "BLUE",
        "GREEN",
        "BLACK",
        "GOLD",
        "gold",
        "generate",
        "blue",
        "red",
        "green",
        "black",
        "combust",
        "oracle",
        "reflex",
        "conquer",
        "haste",
        "one",
        "two",
        "three",
        "CARDS",
        "type",
        "four",
        "five",
        "six",
        "seven",
        "module",
        "exports",
        "colors",
        "cards"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Matthew\\documents\\github\\damocles",
      "sourcesContent": [
        "const COLORS = {\r\n    RED: \"red\",\r\n    BLUE: \"blue\",\r\n    GREEN: \"green\",\r\n    BLACK: \"black\",\r\n    GOLD: \"gold\"\r\n};\r\n\r\nvar gold = COLORS.GOLD;\r\nvar generate = \"G\";\r\nvar blue = COLORS.BLUE;\r\nvar red = COLORS.RED;\r\nvar green = COLORS.GREEN;\r\nvar gold = COLORS.GOLD;\r\nvar black = COLORS.BLACK;\r\nvar combust = \"C\";\r\nvar oracle = \"O\";\r\nvar reflex = \"R\";\r\nvar conquer = \"A\";\r\nvar haste = \"H\";\r\nvar one = \"1\";\r\nvar two = \"2\";\r\nvar three = \"3\";\r\n\r\nconst CARDS = [\r\n    {\r\n        type: generate,\r\n        one: gold,\r\n        four: blue,\r\n        five: blue\r\n    },\r\n    {\r\n        type: generate,\r\n        one: gold,\r\n        four: green,\r\n        five: green\r\n    },\r\n    {\r\n        type: generate,\r\n        one: blue,\r\n        four: black,\r\n        five: black\r\n    },\r\n    {\r\n        type: generate,\r\n        one: blue,\r\n        four: gold,\r\n        five: gold\r\n    },\r\n    {\r\n        type: generate,\r\n        one: green,\r\n        four: black,\r\n        five: black\r\n    },\r\n    {\r\n        type: generate,\r\n        one: green,\r\n        four: blue,\r\n        five: blue\r\n    },\r\n    {\r\n        type: generate,\r\n        one: red,\r\n        four: green,\r\n        five: green\r\n    },\r\n    {\r\n        type: generate,\r\n        one: red,\r\n        four: gold,\r\n        five: gold\r\n    },\r\n    {\r\n        type: generate,\r\n        one: black,\r\n        four: red,\r\n        five: red\r\n    },\r\n    {\r\n        type: generate,\r\n        one: black,\r\n        four: gold,\r\n        five: gold\r\n    },\r\n    {\r\n        type: combust,\r\n        one: red,\r\n        three: blue,\r\n        six: blue\r\n    },\r\n    {\r\n        type: combust,\r\n        one: red,\r\n        three: black,\r\n        six: black\r\n    },\r\n    {\r\n        type: combust,\r\n        one: blue,\r\n        three: green,\r\n        six: green\r\n    },\r\n    {\r\n        type: combust,\r\n        one: blue,\r\n        three: gold,\r\n        six: gold\r\n    },\r\n    {\r\n        type: combust,\r\n        one: green,\r\n        three: red,\r\n        six: red\r\n    },\r\n    {\r\n        type: combust,\r\n        one: green,\r\n        three: gold,\r\n        six: gold\r\n    },\r\n    {\r\n        type: combust,\r\n        one: black,\r\n        three: blue,\r\n        six: blue\r\n    },\r\n    {\r\n        type: combust,\r\n        one: black,\r\n        three: green,\r\n        six: green\r\n    },\r\n    {\r\n        type: combust,\r\n        one: gold,\r\n        three: black,\r\n        six: black\r\n    },\r\n    {\r\n        type: combust,\r\n        one: gold,\r\n        three: red,\r\n        six: red\r\n    },\r\n    {\r\n        type: oracle,\r\n        one: red,\r\n        two: black,\r\n        seven: green\r\n    },\r\n    {\r\n        type: oracle,\r\n        one: blue,\r\n        three: green,\r\n        seven: red\r\n    },\r\n    {\r\n        type: oracle,\r\n        one: gold,\r\n        two: black,\r\n        six: blue\r\n    },\r\n    {\r\n        type: oracle,\r\n        one: black,\r\n        four: red,\r\n        five: gold\r\n    },\r\n    {\r\n        type: oracle,\r\n        one: green,\r\n        three: gold,\r\n        six: blue\r\n    },\r\n    {\r\n        type: reflex,\r\n        one: green,\r\n        three: green\r\n    },\r\n    {\r\n        type: reflex,\r\n        one: red,\r\n        three: red\r\n    },\r\n    {\r\n        type: reflex,\r\n        one: blue,\r\n        three: blue\r\n    },\r\n    {\r\n        type: reflex,\r\n        one: black,\r\n        three: black\r\n    },\r\n    {\r\n        type: reflex,\r\n        one: gold,\r\n        three: gold\r\n    },\r\n    /* {\r\n        type: conquer,\r\n        one: green,\r\n        two: blue\r\n    },\r\n    {\r\n        type: conquer,\r\n        one: blue,\r\n        two: black\r\n    },\r\n    {\r\n        type: conquer,\r\n        one: black,\r\n        two: red\r\n    },\r\n    {\r\n        type: conquer,\r\n        one: red,\r\n        two: gold\r\n    },\r\n    {\r\n        type: conquer,\r\n        one: gold,\r\n        two: green\r\n    }, */\r\n    {\r\n        type: haste,\r\n        one: gold,\r\n    },\r\n    {\r\n        type: haste,\r\n        one: blue,\r\n    },\r\n    {\r\n        type: haste,\r\n        one: green,\r\n    },\r\n    {\r\n        type: haste,\r\n        one: red,\r\n    },\r\n    {\r\n        type: haste,\r\n        one: black,\r\n    },\r\n    {\r\n        type: one,\r\n        one: red,\r\n        two: red,\r\n    },\r\n    {\r\n        type: one,\r\n        one: gold,\r\n        two: gold,\r\n    },\r\n    {\r\n        type: one,\r\n        one: blue,\r\n        two: blue,\r\n    },\r\n    {\r\n        type: one,\r\n        one: green,\r\n        two: green,\r\n    },\r\n    {\r\n        type: one,\r\n        one: black,\r\n        two: black,\r\n    },\r\n    {\r\n        type: one,\r\n        one: red,\r\n        four: red,\r\n    },\r\n    {\r\n        type: one,\r\n        one: gold,\r\n        four: gold,\r\n    },\r\n    {\r\n        type: one,\r\n        one: green,\r\n        four: green,\r\n    },\r\n    {\r\n        type: one,\r\n        one: blue,\r\n        four: blue,\r\n    },\r\n    {\r\n        type: one,\r\n        one: black,\r\n        four: black,\r\n    },\r\n    {\r\n        type: two,\r\n        one: blue,\r\n        three: blue,\r\n        seven: red\r\n    },\r\n    {\r\n        type: two,\r\n        one: black,\r\n        three: black,\r\n        seven: green\r\n    },\r\n    {\r\n        type: two,\r\n        one: gold,\r\n        three: gold,\r\n        seven: black\r\n    },\r\n    {\r\n        type: two,\r\n        one: red,\r\n        three: red,\r\n        seven: gold\r\n    },\r\n    {\r\n        type: two,\r\n        one: green,\r\n        three: green,\r\n        seven: blue\r\n    },\r\n    {\r\n        type: three,\r\n        two: gold,\r\n        three: black,\r\n        six: blue,\r\n        seven: red\r\n    },\r\n    {\r\n        type: three,\r\n        two: blue,\r\n        three: red,\r\n        six: black,\r\n        seven: green\r\n    },\r\n    {\r\n        type: three,\r\n        two: red,\r\n        three: gold,\r\n        six: green,\r\n        seven: blue\r\n    },\r\n    {\r\n        type: three,\r\n        two: green,\r\n        three: blue,\r\n        six: gold,\r\n        seven: black\r\n    },\r\n    {\r\n        type: three,\r\n        two: blue,\r\n        three: green,\r\n        six: red,\r\n        seven: gold\r\n    }\r\n];\r\n\r\nmodule.exports = {\r\n    colors: COLORS,\r\n    cards: CARDS\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558371368086
  }
}