{"version":3,"sources":["../src/index.js"],"names":["NAMES","HEPINDEX","map","name","ChatBox","props","state","current","chats","i","chat","length","push","user","message","socket","emit","getCookie","id","$","val","setState","e","target","value","renderChat","updateInput","addMessage","React","Component","Card","spaces","card","event","temp","slice","keyCode","hold","newSpaces","color","index","type","rotateDisplay","onClick","display","selected","Header","myTurn","OtherHands","returnMe","players","pid","points","played","renderSingleHands","PlayedTiles","MyHand","gameState","discardClicked","playClicked","nextTurn","cards","renderButton","renderDiscard","Community","basin","colorCounts","listBasin","count","Board","listBoard","Login","username","password","updateUsername","Waiting","player","ready","active","renderPlayers","buttonStatus","userReady","Display","selectorClick","hands","allPlayed","renderOtherHands","renderSelector","j","boardClick","Game","selectCards","ID","handleCardClick","playedRaw","selectedColor","isSwap","rawCards","selectedActionCard","selectedNumberCard","playedThisTurn","on","updateActiveCards","queuedForDiscard","Array","discardCount","fill","cardsToRemove","cardsToDiscard","includes","matched","k","cardsEqual","splice","processCode","newHand","hand","number","action","spaceState","tempPlayed","oldPlayed","playedToRecycle","reflexused","isActive","isActiveReflexed","newPlayed","rest","cardType","accessable","selectCardsIndex","tempDiscard","found","newSelected","currentPlayer","prevState","newCounts","setupcomplete","emitCheck","selectColor","newState","rotation","nameSpaces","arraysAreRotations","purgeNull","cardSpaces","boardSpaces","purged","handleSelectorClick","handleBoardClick","handlePlayClick","handleDiscardClick","modifyPoints","waiting","showMe","abandonRoom","connectTo","io","connect","currentCookie","localData","console","log","renderLogin","data","Object","assign","renderGame","document","cookie","renderLobby","ReactDOM","render","getElementById","availableGames","pass","logMeIn","a","b","one","two","three","four","five","six","seven","decodedCookie","decodeURIComponent","ca","split","c","charAt","substring","indexOf","Lobby","available","creator","lobbies","games","joinRoom","parseInt","maxPlayers","nameChange","selectChange","createNewValues","renderAvailable"],"mappings":"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","file":"index.js","sourcesContent":["const NAMES = [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"];\r\n\r\nconst HEPINDEX = NAMES.map(name => name + \"hep\");\r\n\r\nclass ChatBox extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          current: \"\"\r\n      }\r\n    }\r\n    renderChat() {\r\n      let chats = [];\r\n      for (let i = 0; i < this.props.chat.length; i++) {\r\n        chats.push(<p>{this.props.chat[i].user + \": \" + this.props.chat[i].message}</p>);\r\n      }\r\n      return chats;\r\n    }\r\n    \r\n    addMessage() {\r\n        socket.emit(\"sendChat\", {\r\n            user: getCookie(),\r\n            id: this.props.id,\r\n            message: this.state.current\r\n        })\r\n        $(\"#message\").val(\"\");\r\n        this.setState({\r\n            current: \"\"\r\n        })\r\n    }\r\n\r\n    updateInput(e) {\r\n        this.setState({\r\n            current: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (<div id=\"Chat\">\r\n            <div id=\"chatBox\">\r\n                {this.renderChat()}\r\n            </div>\r\n            <input id=\"message\" type=\"text\" onChange={(e) => this.updateInput(e)}></input>\r\n            <button onClick={() =>  this.addMessage() }>{\"Send\"}</button>\r\n        </div>);\r\n    }\r\n  }\r\n\r\nclass Card extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            spaces: props.card.spaces,\r\n            card: props.card,\r\n        }\r\n    }\r\n\r\n    rotateDisplay(event) {\r\n        let temp = this.state.spaces.slice();\r\n        if (event.keyCode === 81) {\r\n            let hold = temp[0];\r\n            for (var i = 0; i < 6; i++) {\r\n                temp[i] = temp[i + 1];\r\n            }\r\n            temp[6] = hold;\r\n        } else if (event.keyCode === 69) {\r\n            let hold = temp[6];\r\n            for (var i = 6; i > 0; i--) {\r\n                temp[i] = temp[i - 1];\r\n            }\r\n            temp[0] = hold;\r\n        }\r\n        this.setState({\r\n            spaces: temp\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let newSpaces = this.state.spaces.map((color, index) => <li key={index} className={\"dot small \" + color + \" \" + HEPINDEX[index]}>{}</li>);\r\n        newSpaces.push(<li key={7} className=\"cardType\">{this.props.card.type}</li>);\r\n        return (<div onKeyDown={(e) => this.rotateDisplay(e)}\r\n            tabIndex=\"0\"\r\n            className=\"cardRotateContainer\">\r\n            <ul onClick={() => this.props.onClick(this.state.card)}\r\n                className={\"card \" + this.props.display + \" \" + this.props.selected}\r\n            >  {newSpaces} </ul></div>);\r\n    }\r\n}\r\n\r\nfunction Header(props) {\r\n    let myTurn = props.myTurn ? \"My turn\" : \"Not my turn\";\r\n    return <p>{myTurn}</p>\r\n}\r\n\r\nclass OtherHands extends React.Component {\r\n    renderSingleHands() {\r\n        let returnMe = [];\r\n        for (let i = 0; i < this.props.players.length; i++) {\r\n            if (i != this.props.pid) {\r\n                returnMe.push(<div className=\"otherHands\">\r\n                    <label>{this.props.players[i].name + \": \" + this.props.points[i] + \" Points\"}</label>\r\n                    <div className=\"otherHandsPlayed\">\r\n                        {this.props.played[i]}\r\n                    </div>\r\n                </div>);\r\n            }\r\n        }\r\n        return returnMe;\r\n    }\r\n    render() {\r\n        return <div className=\"otherHands\">\r\n            {this.renderSingleHands()}\r\n        </div>;\r\n    }\r\n}\r\n\r\nfunction PlayedTiles(props) {\r\n    return <div className=\"playedtiles\">{props.played}</div>;\r\n}\r\n\r\nclass MyHand extends React.Component {\r\n    renderButton() {\r\n        if (this.props.gameState === 'discardphase' || (this.props.gameState === 'discardNormal' && this.props.myTurn)) {\r\n            return <button onClick={() => this.props.discardClicked()} className={\"playbutton\"}>{\"DiscardTiles\"}</button>\r\n        } else {\r\n            return <button disabled={(this.props.gameState === \"setup\") || !this.props.myTurn} onClick={() => this.props.playClicked()} className={\"playbutton\"}>{\"Play Tiles\"}</button>\r\n        }\r\n    }\r\n\r\n    renderDiscard() {\r\n        return <button disabled={(!this.props.myTurn || this.props.gameState === \"setup\" || this.props.gameState === \"discardphase\")} onClick={() => this.props.nextTurn() }>{ \"Finish Turn\" }</button>\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"hand\">\r\n            {this.props.cards}\r\n            {this.renderButton()}\r\n            {this.renderDiscard()}\r\n        </div>;\r\n    }\r\n}\r\n\r\nfunction Community(props) {\r\n    const basin = props.colorCounts;\r\n    const listBasin = basin.map(color => (\r\n        <button\r\n            className={\"dot \" + color.color}\r\n            key={color.color}\r\n            onClick={() => props.onClick(color)}\r\n        >\r\n            {color.count}\r\n        </button>\r\n    ));\r\n    return <ul>{listBasin}</ul>;\r\n}\r\n\r\nfunction Board(props) {\r\n    const spaces = props.spaces;\r\n    const listBoard = spaces.map((color, index) => (\r\n        <button\r\n            className={\"dot \" + color + \" \" + HEPINDEX[index]}\r\n            key={index}\r\n            onClick={() => props.onClick(color, index)}\r\n        >{}</button>\r\n    ));\r\n    return <ul className=\"board\">{listBoard}</ul>;\r\n}\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n\r\n    updatePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n\r\n    updateUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        //<label htmlFor={\"passw\"}><b>{\"Password\"}</b></label>\r\n        //<input type={\"password\"} id={\"passw\"} placeholder={\"Enter Password\"} onChange={(e) => this.updatePassword(e)}></input>\r\n        return <div className={\"Login\"}>\r\n            <form id=\"login\">\r\n                <label htmlFor={\"uname\"}><b>{\"Username\"}</b></label>\r\n                <input type={\"text\"} id={\"uname\"} placeholder={\"Enter Username\"} onChange={(e) => this.updateUsername(e)}></input>\r\n                <button onClick={() => this.props.onClick(this.state.username, this.state.password)} type={\"button\"}>{\"Login\"}</button>\r\n            </form>\r\n        </div>;\r\n    }\r\n}\r\n\r\nclass Waiting extends React.Component {\r\n    userReady() {\r\n        socket.emit(\"userreadied\", {\r\n            user: getCookie(),\r\n            id: this.props.id\r\n        });\r\n    }\r\n\r\n    buttonStatus() {\r\n        let player = this.props.players.slice();\r\n        let user = getCookie();\r\n        for (let i = 0; i < player.length; i++) {\r\n            if (player[i].name === user) {\r\n                return player[i].ready;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderPlayers() {\r\n        let player = this.props.players.slice();\r\n        player = player.map(player => { \r\n            let active = player.ready ? \"readied\" : \"notreadied\";\r\n            return <li index={player.name} className={\"pregameListItem \" + active}>{player.name}</li>\r\n        });\r\n        return <ul>{player}</ul>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"Waiting\"}>\r\n                {this.renderPlayers()}\r\n                <button disabled={this.buttonStatus()} onClick={() => this.userReady()} type={\"button\"}>{\"Ready\"}</button>\r\n            </div>);\r\n    }\r\n}\r\n\r\nclass Display extends React.Component {\r\n    renderSelector() {\r\n        return (\r\n            <Community\r\n                onClick={i => this.props.selectorClick(i)}\r\n                colorCounts={this.props.colorCounts}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderOtherHands() {\r\n        let hands = [];\r\n        hands.push(<OtherHands pid={this.props.pid} points={this.props.points} players={this.props.players} played={this.props.allPlayed}/>);\r\n        return hands;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"display\">\r\n                {this.renderOtherHands()}\r\n                <Header myTurn={this.props.myTurn}/>\r\n                {this.renderSelector()}\r\n                <Board\r\n                    onClick={(i, j) => this.props.boardClick(i, j)}\r\n                    spaces={this.props.spaces}\r\n                />\r\n                <PlayedTiles played={this.props.played} />\r\n                <MyHand playClicked={() => this.props.playClicked()} \r\n                        discardClicked={() => this.props.discardClicked()}\r\n                        nextTurn = {() => this.props.nextTurn()}\r\n                        cards={this.props.cards} \r\n                        myTurn={this.props.myTurn}\r\n                        gameState={this.props.gameState}\r\n                        id={this.props.id}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let selectCards = props.selectCards;\r\n        let cards = selectCards.map((name) => { return (<Card key={name.ID} onClick={(i) => this.handleCardClick(i)} display={\"\"} card={name} />) });\r\n        this.state = {\r\n            playedRaw: props.played,\r\n            played: [],\r\n            selectedColor: null,\r\n            isSwap: false,\r\n            index: null,\r\n            rawCards: selectCards,\r\n            cards: cards,\r\n            selectedActionCard: null,\r\n            selectedNumberCard: null,\r\n            playedThisTurn: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.on('boardChange', () => {\r\n            this.setState({\r\n                cards: this.updateActiveCards(this.props.spaces, this.props.selectCards),\r\n                played: this.updateActiveCards(this.props.spaces, this.props.played)\r\n            });\r\n        });\r\n        this.props.socket.on('cardPlayed', () => {\r\n            this.setState({\r\n                cards: this.updateActiveCards(this.props.spaces, this.props.selectCards),\r\n                played: this.updateActiveCards(this.props.spaces, this.props.played)\r\n            });\r\n        });\r\n        this.props.socket.on('cardUpdate', () => {\r\n            this.setState({\r\n                cards: this.updateActiveCards(this.props.spaces, this.props.selectCards),\r\n                played: this.updateActiveCards(this.props.spaces, this.props.played)\r\n            });\r\n        });\r\n        this.props.socket.on('discardphase', () => {\r\n           this.setState({\r\n               queuedForDiscard: Array(this.props.discardCount).fill(null)\r\n           }) \r\n        });\r\n    }\r\n    \r\n    handleDiscardClick() {\r\n        let cardsToRemove = this.props.selectCards.slice();\r\n        let cardsToDiscard = this.state.queuedForDiscard.slice();\r\n        let j = 0;\r\n        if (!cardsToDiscard.includes(null)) {\r\n            while (j < cardsToRemove.length) {\r\n                let matched = false;\r\n                for (let k = 0; k < cardsToDiscard.length; k++) {\r\n                    if (cardsEqual(cardsToRemove[j], cardsToDiscard[k])) {\r\n                        cardsToRemove.splice(j, 1);\r\n                        cardsToDiscard.splice(k, 1);\r\n                        matched = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!matched) {\r\n                    j++;\r\n                }\r\n            }\r\n            if (this.props.processCode === null) {\r\n                socket.emit('discardPresetup', {\r\n                    newHand: cardsToRemove,\r\n                    user: getCookie(),\r\n                    id: this.props.id\r\n\r\n                });\r\n            } else {\r\n                socket.emit('discardNormalHand', {\r\n                    hand: cardsToRemove,\r\n                    id: this.props.id\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePlayClick() {\r\n        let number = this.state.selectedNumberCard;\r\n        let action = this.state.selectedActionCard;\r\n        let spaceState = this.props.spaces.slice();\r\n        let tempPlayed = [];\r\n        let oldPlayed = [];\r\n        let playedToRecycle = this.props.played.slice();\r\n        let cardsToRemove = this.props.selectCards.slice();\r\n        let reflexused = false;\r\n        let playedThisTurn = this.state.playedThisTurn.slice();\r\n        for (let i = 0; i < playedThisTurn.length; i++) {\r\n            if (cardsEqual(playedThisTurn[i].action, action) && cardsEqual(playedThisTurn[i].number, number)) {\r\n                return false;\r\n            }\r\n        }\r\n        if (this.props.gameState === \"hasteCheck\") { //Only haste can be played\r\n            if (number === null && action != null && action.type === \"H\") {\r\n                if (this.isActive(spaceState, action)) {\r\n                    let j = 0;\r\n                    // Search Hand\r\n                    while (j < cardsToRemove.length) {\r\n                        if (cardsEqual(cardsToRemove[j], number) || cardsEqual(cardsToRemove[j], action)) {\r\n                            tempPlayed.push(cardsToRemove.splice(j, 1)[0]);\r\n                        } else {\r\n                            j++;\r\n                        }\r\n                    }\r\n                    j = 0;\r\n                    // Search Played\r\n                    while (j < playedToRecycle.length) {\r\n                        if (cardsEqual(playedToRecycle[j], number) || cardsEqual(playedToRecycle[j], action)) {\r\n                            oldPlayed.push(playedToRecycle[j]);\r\n                        }\r\n                        j++;\r\n                    }\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        } else { // Anything can be played\r\n            //TODO: Make haste playable but have it not do anything\r\n            if (number != null && action != null) {\r\n                if (this.isActive(spaceState, number) && this.isActive(spaceState, action) && (action.type != \"A\" && action.type != \"R\" && action.type != \"H\")) {\r\n                    let j = 0;\r\n                    while (j < cardsToRemove.length) {\r\n                        if (cardsEqual(cardsToRemove[j], number) || cardsEqual(cardsToRemove[j], action)) {\r\n                            tempPlayed.push(cardsToRemove.splice(j, 1)[0]);\r\n                        } else {\r\n                            j++;\r\n                        }\r\n                    }\r\n                    j = 0;\r\n                    while (j < playedToRecycle.length) {\r\n                        if (cardsEqual(playedToRecycle[j], number) || cardsEqual(playedToRecycle[j], action)) {\r\n                            oldPlayed.push(playedToRecycle[j]);\r\n                        }\r\n                        j++;\r\n                    }\r\n                } else if (this.props.gameState === \"reflexed\" && \r\n                            (this.isActiveReflexed(spaceState, number) && this.isActive(spaceState, action) ||\r\n                            this.isActive(spaceState, number) && this.isActiveReflexed(spaceState, action)) &&\r\n                            (action.type != \"A\" && action.type != \"R\" && action.type != \"H\")) {\r\n                    let j = 0;\r\n                    reflexused = true;\r\n                    while (j < cardsToRemove.length) {\r\n                        if (cardsEqual(cardsToRemove[j], number) || cardsEqual(cardsToRemove[j], action)) {\r\n                            tempPlayed.push(cardsToRemove.splice(j, 1)[0]);\r\n                        } else {\r\n                            j++;\r\n                        }\r\n                    }\r\n                    if (cardsToRemove.length === this.props.selectCards.length) {\r\n                        return false;\r\n                    }\r\n                    j = 0;\r\n                    while (j < playedToRecycle.length) {\r\n                        if (cardsEqual(playedToRecycle[j], number) || cardsEqual(playedToRecycle[j], action)) {\r\n                            oldPlayed.push(playedToRecycle[j]);\r\n                        }\r\n                        j++;\r\n                    }\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else if (action != null) {\r\n                if (this.isActive(spaceState, action) && (action.type === \"A\" || action.type === \"R\")) {\r\n                    let j = 0;\r\n                    while (j < cardsToRemove.length) {\r\n                        if (cardsEqual(cardsToRemove[j], action)) {\r\n                            tempPlayed.push(cardsToRemove.splice(j, 1)[0]);\r\n                        } else {\r\n                            j++;\r\n                        }\r\n                    }\r\n                    j = 0;\r\n                    while (j < playedToRecycle.length) {\r\n                        if (cardsEqual(playedToRecycle[j], action)) {\r\n                            oldPlayed.push(playedToRecycle[j]);\r\n                        }\r\n                        j++;\r\n                    }\r\n                } else if (this.props.gameState === \"reflexed\" && this.isActiveReflexed(spaceState, action) && (action.type === \"A\" || action.type === \"R\")) {\r\n                    let j = 0;\r\n                    reflexused = true;\r\n                    while (j < cardsToRemove.length) {\r\n                        if (cardsEqual(cardsToRemove[j], action)) {\r\n                            tempPlayed.push(cardsToRemove.splice(j, 1)[0]);\r\n                        } else {\r\n                            j++;\r\n                        }\r\n                    }\r\n                    if (cardsToRemove.length === this.props.selectCards.length) {\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n        playedThisTurn.push({\r\n            action: action,\r\n            number: number\r\n        });\r\n        this.setState({\r\n            selectedNumberCard: null,\r\n            selectedActionCard: null,\r\n            playedThisTurn: playedThisTurn\r\n        });\r\n        socket.emit('cardPlayed', {\r\n            newPlayed: tempPlayed,\r\n            oldPlayed: oldPlayed,\r\n            rest: cardsToRemove,\r\n            pid: this.props.pid,\r\n            id: this.props.id,\r\n            reflexused: reflexused\r\n        });\r\n    }\r\n\r\n    handleCardClick(i) {\r\n        let selectCards = this.props.selectCards.slice();\r\n        let played = this.props.played.slice();\r\n        let cardType = i.type;\r\n        let accessable = this.props.processCode === null ? selectCards.length : this.props.processCode;\r\n        let selectCardsIndex = -1;\r\n        for (let j = 0; j < selectCards.length; j++) {\r\n            if (cardsEqual(i, selectCards[j])) {\r\n                selectCardsIndex = j;\r\n                break;\r\n            }\r\n        }\r\n        if (this.props.gameState === 'discardphase') {\r\n            let tempDiscard = this.state.queuedForDiscard.slice();\r\n            if (selectCardsIndex >= selectCards.length - accessable) {\r\n                let found = false;\r\n                for (let j = 0; j < tempDiscard.length; j++) {\r\n                    if (cardsEqual(tempDiscard[j], i)) {\r\n                        tempDiscard[j] = null;\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!found && tempDiscard.includes(null)) {\r\n                    for (let j = 0; j < tempDiscard.length; j++) {\r\n                        if (tempDiscard[j] === null) {\r\n                            tempDiscard[j] = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                this.setState({\r\n                    queuedForDiscard: tempDiscard,\r\n                    cards: selectCards.map((name) => {\r\n                        let selected = \"\";\r\n                        for (let j = 0; j < tempDiscard.length; j++) {\r\n                            if (cardsEqual(tempDiscard[j], name)) {\r\n                                selected = \"selectedCard\";\r\n                                break;\r\n                            }\r\n                        }\r\n                        return (<Card key={name.ID} selected={selected} onClick={(i) => this.handleCardClick(i)} display={\"\"} card={name} />);\r\n                    }),\r\n                })\r\n            }\r\n        } else {\r\n            if (cardType === \"1\" || cardType === \"2\" || cardType === \"3\") {\r\n                let newSelected = (i === this.state.selectedNumberCard) ? null : i;\r\n                this.setState({\r\n                    selectedNumberCard: newSelected,\r\n                    cards: selectCards.map((name) => {\r\n                        let active = \"\";\r\n                        if (this.isActive(this.props.spaces, name)) {\r\n                            active = \"active\";\r\n                        } else if ((this.props.gameState === \"reflexed\" && this.props.currentPlayer === this.props.pid) && this.isActiveReflexed(this.props.spaces, name)) {\r\n                            active = \"activeReflexed\";\r\n                        }\r\n                        let selected = (cardsEqual(name, newSelected) || cardsEqual(name, this.state.selectedActionCard)) ? \"selectedCard\" : \"\";\r\n                        return (<Card key={name.ID} selected={selected} onClick={(i) => this.handleCardClick(i)} display={active} card={name} />);\r\n                    }),\r\n                    played: played.map((name) => {\r\n                        let active = this.isActive(this.props.spaces, name) ? \"active\" : \"\";\r\n                        let selected = (cardsEqual(name, newSelected) || cardsEqual(name, this.state.selectedActionCard)) ? \"selectedCard\" : \"\";\r\n                        return (<Card key={name.ID} selected={selected} onClick={(i) => this.handleCardClick(i)} display={active} card={name} />);\r\n                    })\r\n                });\r\n            } else {\r\n                let newSelected = (i === this.state.selectedActionCard) ? null : i;\r\n                this.setState({\r\n                    selectedActionCard: newSelected,\r\n                    cards: selectCards.map((name) => {\r\n                        let active = \"\";\r\n                        if (this.isActive(this.props.spaces, name)) {\r\n                            active = \"active\";\r\n                        } else if ((this.props.gameState === \"reflexed\" && this.props.currentPlayer === this.props.pid) && this.isActiveReflexed(this.props.spaces, name)) {\r\n                            active = \"activeReflexed\";\r\n                        }\r\n                        let selected = (cardsEqual(name, newSelected) || cardsEqual(name, this.state.selectedNumberCard)) ? \"selectedCard\" : \"\";\r\n                        return (<Card key={name.ID} selected={selected} onClick={(i) => this.handleCardClick(i)} display={active} card={name} />);\r\n                    }),\r\n                    played: played.map((name) => {\r\n                        let active = this.isActive(this.props.spaces, name) ? \"active\" : \"\";\r\n                        let selected = (cardsEqual(name, newSelected) || cardsEqual(name, this.state.selectedNumberCard)) ? \"selectedCard\" : \"\";\r\n                        return (<Card key={name.ID} selected={selected} onClick={(i) => this.handleCardClick(i)} display={active} card={name} />);\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSelectorClick(i) {\r\n        if (this.props.currentPlayer === this.props.pid) {\r\n            if (i.count > 0) {\r\n                this.setState({\r\n                    selectedColor: i.color,\r\n                    isSwap: false,\r\n                    index: null,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleBoardClick(i, index) {\r\n        const prevState = this.state;\r\n        if (this.props.currentPlayer === this.props.pid) {\r\n            if (this.props.gameState === \"setup\") {\r\n                if (prevState.selectedColor != null && this.props.spaces[index] === null) {\r\n                    // swap with stack\r\n                    let newSpaces = this.props.spaces.slice();\r\n                    newSpaces[index] = prevState.selectedColor;\r\n                    let newCounts = this.props.colorCounts.slice();\r\n                    let setupcomplete = true;\r\n                    for (var j = 0; j < 7; j++) {\r\n                        if (newSpaces[j] === null) {\r\n                            setupcomplete = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    for (var j = 0; j < newCounts.length; j++) {\r\n                        if (newCounts[j].color === prevState.selectedColor) {\r\n                            newCounts[j].count--;\r\n                        }\r\n                        if (\r\n                            this.props.spaces[index] != null &&\r\n                            this.props.spaces[index] === newCounts[j].color\r\n                        ) {\r\n                            newCounts[j].count++;\r\n                        }\r\n                    }\r\n                    socket.emit('boardChange', {newSpaces: newSpaces, newCounts: newCounts, id: this.props.id });\r\n                    this.setState({\r\n                        selectedColor: null,\r\n                        isSwap: false,\r\n                        index: null,\r\n                        gameState: setupcomplete ? \"\" : \"setup\"\r\n                    });\r\n                }\r\n            } else if (this.props.gameState === \"bonusswap\" || this.props.gameState === \"boardChange\") {\r\n                if (prevState.index === index) {\r\n                    //Selecting already selected deselects\r\n                    this.setState({\r\n                        selectedColor: null,\r\n                        isSwap: false,\r\n                        index: null\r\n                    });\r\n                } else if (prevState.selectedColor != null) {\r\n                    // swap with stack\r\n                    let newSpaces = this.props.spaces.slice();\r\n                    newSpaces[index] = prevState.selectedColor;\r\n                    let newCounts = this.props.colorCounts.slice();\r\n                    for (var j = 0; j < newCounts.length; j++) {\r\n                        if (newCounts[j].color === prevState.selectedColor) {\r\n                            newCounts[j].count--;\r\n                        }\r\n                        if (\r\n                            this.props.spaces[index] != null &&\r\n                            this.props.spaces[index] === newCounts[j].color\r\n                        ) {\r\n                            newCounts[j].count++;\r\n                        }\r\n                    }\r\n                    let emitCheck = this.props.gameState === 'bonusswap' ? 'bonusswap' : 'boardChange';\r\n                    socket.emit(emitCheck, {newSpaces: newSpaces, newCounts: newCounts, id: this.props.id});\r\n                    this.setState({\r\n                        selectedColor: null,\r\n                        isSwap: false,\r\n                        index: null,\r\n                    });\r\n                } else if (prevState.isSwap) {\r\n                    //Swapping with active thing\r\n                    let newSpaces = this.props.spaces.slice();\r\n                    let temp = newSpaces[index];\r\n                    newSpaces[index] = newSpaces[prevState.index];\r\n                    newSpaces[prevState.index] = temp;\r\n                    let emitCheck = this.props.gameState === 'bonusswap' ? 'bonusswap' : 'boardChange';\r\n                    socket.emit(emitCheck, {newSpaces: newSpaces, newCounts: this.props.colorCounts, id: this.props.id});\r\n                    this.setState({\r\n                        selectColor: null,\r\n                        isSwap: false,\r\n                        index: null,\r\n                    });\r\n                } else {\r\n                    //Selecting for swap\r\n                    this.setState({\r\n                        selectColor: null,\r\n                        isSwap: true,\r\n                        index: index\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateActiveCards(newState, selectCards) {\r\n        return (selectCards.map((name) => {\r\n            let active = \"\";\r\n            if (this.isActive(newState, name)) {\r\n                active = \"active\";\r\n            } else if ((this.props.gameState === \"reflexed\" && this.props.currentPlayer === this.props.pid) && this.isActiveReflexed(newState, name)) {\r\n                active = \"activeReflexed\";\r\n            }\r\n            let selected = (cardsEqual(this.state.selectedActionCard, name) || cardsEqual(this.state.selectedNumberCard, name)) ? \"selectedCard\" : \"\";\r\n            return (<Card key={name.ID} onClick={(i) => this.handleCardClick(i)} selected={selected} display={active} card={name} />);\r\n        }));\r\n    }\r\n\r\n    isActive(newState, name) {\r\n        let rotation = newState.slice();\r\n        let nameSpaces = name.spaces.slice();\r\n        return this.arraysAreRotations(nameSpaces, rotation);\r\n    }\r\n\r\n    isActiveReflexed(newState, name) {\r\n        let rotation = this.purgeNull(newState);\r\n        let nameSpaces = this.purgeNull(name.spaces);\r\n        return this.arraysAreRotations(nameSpaces, rotation);\r\n    }\r\n\r\n    arraysAreRotations(cardSpaces, boardSpaces) {\r\n        let active = true;\r\n        for (let j = 0; j < boardSpaces.length; j++) {\r\n            active = false;\r\n            let k = 0;\r\n            for (let i = 0; i < boardSpaces.length; i++) {\r\n                if (cardSpaces[k] === null || cardSpaces[k] === boardSpaces[i]) {\r\n                    k++;\r\n                    if (k === cardSpaces.length) {\r\n                        active = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            //Match found\r\n            if (active) {\r\n                break;\r\n            }\r\n            //Rotates board\r\n            let temp = boardSpaces[0];\r\n            for (let i = 0; i < boardSpaces.length; i++) {\r\n                boardSpaces[i] = boardSpaces[i + 1];\r\n            }\r\n            boardSpaces[boardSpaces.length - 1] = temp;\r\n        }\r\n        return active;\r\n    }\r\n\r\n    purgeNull(name) {\r\n        let purged = name.slice();\r\n        let j = 0;\r\n        while (j < purged.length) {\r\n            if (purged[j] === null) {\r\n                purged.splice(j, 1);\r\n            } else {\r\n                j++;\r\n            }\r\n        }\r\n        return purged;\r\n    }\r\n\r\n    abandonRoom() {\r\n        socket.emit(\"abandonRoom\", {\r\n            id: this.props.id,\r\n            user: getCookie()\r\n        });\r\n    }\r\n\r\n    nextTurn() {\r\n        if (this.props.gameState === 'playCards' || this.props.gameState === 'reflexed') {\r\n            this.setState({\r\n                playedThisTurn: []\r\n            })\r\n        }\r\n        socket.emit('nextPhase', { \r\n            id: this.props.id \r\n        });\r\n    }\r\n\r\n    modifyPoints() {\r\n        let points = this.props.points.slice();\r\n        let played = this.props.allPlayed.slice();\r\n        for (let i = 0; i < points.length; i++) {\r\n            for (let j = 0; j < played[i].length; j++) {\r\n                points[i] += played[i][j].points;\r\n            }\r\n        }\r\n        return points;\r\n    }\r\n\r\n    render() {\r\n        let allPlayed = this.props.allPlayed.slice();\r\n        for (let i = 0; i < allPlayed.length; i++) {\r\n            allPlayed[i] = this.updateActiveCards(this.props.spaces, allPlayed[i]);\r\n        }\r\n        let display = <Display\r\n            spaces={this.props.spaces} //[]\r\n            colorCounts={this.props.colorCounts} //[]\r\n            selectorClick={i => this.handleSelectorClick(i)} //function\r\n            boardClick={(i, j) => this.handleBoardClick(i, j)} //function\r\n            cards={this.state.cards} //[<Cards>]\r\n            played={this.state.played}//[<Cards>]\r\n            playClicked={() => this.handlePlayClick()} //function\r\n            discardClicked={() => this.handleDiscardClick()}\r\n            myTurn={this.props.pid === this.props.currentPlayer}\r\n            gameState={this.props.gameState}\r\n            allPlayed={allPlayed}\r\n            pid={this.props.pid}\r\n            players={this.props.players}\r\n            points={this.modifyPoints()}\r\n            id={this.props.id}\r\n            nextTurn={() => this.nextTurn()}\r\n        />;\r\n        let waiting = <Waiting id={this.props.id} players={this.props.players}/>;\r\n        let showMe = this.props.gameState === \"prestart\" ? waiting : display;\r\n        return (<div id={\"game\"}>\r\n                    <button id={\"backbutton\"} type={'button'} onClick={() => this.abandonRoom()}>{\"Back\"}</button>\r\n                    {showMe}\r\n                    <ChatBox id={this.props.id} chat={this.props.chat}/>\r\n                </div>);\r\n    }\r\n}\r\n\r\nvar connectTo = 'https://damoclesgame.herokuapp.com';\r\n//var connectTo = 'http://localhost:3000';\r\nvar socket = io.connect(connectTo);\r\n\r\n    let currentCookie = getCookie();\r\n    let localData = {};\r\n    if (currentCookie != \"\") {\r\n        console.log(currentCookie);\r\n        socket.emit('refreshCookie', currentCookie);\r\n    } else {\r\n        renderLogin(localData, socket);\r\n    }\r\n    socket.on('standby', function(data) {\r\n        Object.assign(localData, data);\r\n        renderGame(localData, socket);\r\n    });\r\n    socket.on('boardChange', function(data) {\r\n        Object.assign(localData, data);\r\n        renderGame(localData, socket);\r\n    });\r\n    socket.on('setupphase', function(data) {\r\n        Object.assign(localData, data);\r\n        renderGame(localData, socket);\r\n    });\r\n    socket.on('cardUpdate', function(data) {\r\n        Object.assign(localData, data);\r\n        renderGame(localData, socket);\r\n    });\r\n    socket.on('messageSent', function(data) {\r\n        Object.assign(localData, data);\r\n        renderGame(localData, socket);\r\n    });\r\n    socket.on('discardphase', function(data) {\r\n        Object.assign(localData, data);\r\n        renderGame(localData, socket);\r\n    });\r\n    socket.on('cardPlayed', function(data) {\r\n        Object.assign(localData, data);\r\n        renderGame(localData, socket);\r\n    });\r\n    socket.on('bonusswap', function(data) {\r\n        Object.assign(localData, data);\r\n        renderGame(localData, socket);\r\n    });\r\n    socket.on('reflexed', function(data) {\r\n        Object.assign(localData, data);\r\n        renderGame(localData, socket);\r\n    });\r\n    socket.on('cookify', function(data) {\r\n        document.cookie = data.cookie;\r\n        Object.assign(localData, data);\r\n        renderLobby(localData, socket);\r\n    });\r\n    socket.on('newroom', function(data) {\r\n        Object.assign(localData, data);\r\n        renderLobby(localData, socket);\r\n    });\r\n    socket.on('lobify', function(data) {\r\n        localData = {};\r\n        Object.assign(localData, data);\r\n        renderLobby(localData, socket);\r\n    });\r\n    socket.on('userjoined', function(data) {\r\n        Object.assign(localData, data);\r\n        renderGame(localData, socket);\r\n    });\r\n    socket.on('userready', function(data) {\r\n        Object.assign(localData, data);\r\n        renderGame(localData, socket);\r\n    });\r\n    socket.on('nextTurn', function(data) {\r\n        Object.assign(localData, data);\r\n        renderGame(localData, socket);\r\n    });\r\n\r\nfunction renderGame(data, socket) {\r\n    ReactDOM.render(<Game   spaces={data.spaces} \r\n        colorCounts={data.colorCounts}\r\n        selectCards={data.selectCards}\r\n        gameState={data.gameState}\r\n        pid={data.pid}\r\n        currentPlayer={data.currentPlayer}\r\n        socket={socket}\r\n        played={data.played[data.pid]}\r\n        allPlayed={data.played}\r\n        discardCount={data.discardCount}\r\n        processCode={data.processCode}\r\n        players={data.players}\r\n        id={data.id}\r\n        points={data.points}\r\n        chat={data.chat}\r\n\r\n        />, document.getElementById(\"root\"));\r\n}\r\n\r\nfunction renderLobby(data, socket) {\r\n    ReactDOM.render(<Lobby\r\n        available={data.availableGames}\r\n    />, document.getElementById(\"root\"));\r\n}\r\n\r\nfunction renderLogin() {\r\n    ReactDOM.render(<Login\r\n            onClick={(user, pass) => logMeIn(user, pass)}\r\n        />, document.getElementById(\"root\"));\r\n}\r\n\r\nfunction logMeIn(user, pass) {\r\n    socket.emit(\"login\", {\r\n        username: user,\r\n        password: pass\r\n    });\r\n}\r\n\r\nfunction cardsEqual(a, b) {\r\n    return ((a === null && b === null) || a != null && b != null && a.one === b.one &&\r\n            a.two === b.two &&\r\n            a.three === b.three &&\r\n            a.four === b.four &&\r\n            a.five === b.five &&\r\n            a.six === b.six &&\r\n            a.seven === b.seven &&\r\n            a.type === b.type &&\r\n            a.id === b.id\r\n    );\r\n}\r\n\r\nfunction getCookie() {\r\n    var name = \"Damocles=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(\",\");\r\n    for(var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n\r\nclass Lobby extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        available: [],\r\n        selected: 3,\r\n        name: null\r\n      }\r\n    }\r\n    \r\n    selectChange(e) {\r\n      this.setState({\r\n        selected: e.target.value\r\n      });\r\n    }\r\n    \r\n    nameChange(e) {\r\n      this.setState({\r\n        name: e.target.value\r\n      });\r\n    }\r\n    \r\n    createNewValues() {\r\n        let name = this.state.name;\r\n        if (name != null) {\r\n            socket.emit(\"roomcreated\", {\r\n                name: name,\r\n                players: this.state.selected,\r\n                creator: getCookie()\r\n            });\r\n        }\r\n    }\r\n\r\n    joinRoom(id) {\r\n        socket.emit('roomjoined', {\r\n            user: getCookie(),\r\n            id: id\r\n        });\r\n    }\r\n\r\n    renderAvailable() {\r\n        let lobbies = [];\r\n        let games = this.props.available.slice();\r\n        for (let i = 0; i < games.length; i++) {\r\n            lobbies.push(<li \r\n                id={games[i].id}\r\n                className={\"lobbylist\"}\r\n                onDoubleClick={(e) => this.joinRoom(parseInt(e.target.id))}\r\n            >{games[i].name + \" - \" + games[i].maxPlayers}</li>);\r\n        }\r\n        return (<div className=\"browser\"><label>{\"Currently Available Rooms\"}</label><ul>{lobbies}</ul></div>\r\n        );\r\n    }\r\n    \r\n    render() {\r\n      return (<div id=\"lobby\">\r\n                <div id={\"newroomlabeldiv\"}>\r\n                    <label id={\"newroomlabel\"}>{\"New Room Name\"}</label>\r\n                    <input id={\"newroominput\"} onInput={(e) => this.nameChange(e)} type=\"text\"></input>\r\n                </div>\r\n                <div id={\"newroommaxplayerdiv\"}>\r\n                    <label id={\"maxplayer\"}>{\"MAX PLAYERS\"}</label>\r\n                    <select id={\"playeroptions\"} onChange={(e) => this.selectChange(e)} id=\"max_val\">\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"6\">6</option>\r\n                    </select>\r\n                </div>\r\n                <button id={\"newroombutton\"} type=\"button\" onClick={() => this.createNewValues()}>{\"New Instance\"}</button>\r\n            {this.renderAvailable()}\r\n            </div> \r\n          );\r\n    }\r\n}\r\n"]}